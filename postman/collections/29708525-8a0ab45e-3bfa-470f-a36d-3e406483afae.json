{
	"info": {
		"_postman_id": "29708525-8a0ab45e-3bfa-470f-a36d-3e406483afae",
		"name": "Microsoft Graph",
		"description": "[Microsoft Graph](https://docs.microsoft.com/graph/overview) is the gateway to data and intelligence in Microsoft 365. It provides a unified programmability model that you can use to access the tremendous amount of data in Microsoft 365, Windows 10, and Enterprise Mobility + Security. Use the wealth of data in Microsoft Graph to build apps for organizations and consumers that interact with millions of users.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Delegated",
			"item": [
				{
					"name": "Notebooks",
					"item": [
						{
							"name": "Get my notebooks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a276cbd8-3ef4-417c-838d-e13fbbef7632",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"NotebookId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-802a23ed-535f-4a26-8869-889d6dc8c312",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/onenote/notebooks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"onenote",
										"notebooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my notebook sections",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0a4fe2b8-bed2-428d-b7d6-885619e5f8df",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SectionId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a51dc680-efe0-4794-a2b2-6001edcdf9c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/onenote/sections",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"onenote",
										"sections"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my notebook pages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4024c8ee-62a0-4db3-8914-3934adffda28",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PageId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-dd266f4a-904a-43c7-87ca-0b0e5d42dc84",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/onenote/pages",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"onenote",
										"pages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create notebook",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10700a30-1bdb-4b58-8d20-1bdbee809d71",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"NotebookId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-b8b1ed5c-0d78-4e49-90c3-b532bdfa2384",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Postman Notebook 1\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/onenote/notebooks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"onenote",
										"notebooks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create section",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6bf7acd5-55ed-481e-a4ea-c975f8b7d391",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Notes.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SectionId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-43924cf8-b95c-439f-81f9-31a3652cf914",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Section 1\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/onenote/notebooks/{{NotebookId}}/sections",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"onenote",
										"notebooks",
										"{{NotebookId}}",
										"sections"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-a80c7c15-2605-4bc4-9f57-a1c1c8e447ad"
				},
				{
					"name": "SharePoint",
					"item": [
						{
							"name": "Get my organization's default site collection",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8d064c1a-c100-47e1-bddc-bdb1d99577bc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SiteId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-161818e9-3e68-460a-8df7-0b4d49b940e0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get the doc libs in root site",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e362a72-b222-4472-97e8-68820bd6f34c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ListId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-7d1676ef-873b-4da4-9b9b-39265b72846b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/drives",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"drives"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search for site by name",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f9ff3a4b-5729-4492-96c7-e150e6506de2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1a1271d5-996a-474c-99db-b016e753b0ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites?search=contoso",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites"
									],
									"query": [
										{
											"key": "search",
											"value": "contoso"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get subsites of site",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "521ea6c4-97ba-4d51-a0e4-61e545bb9cdb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-62fd3354-ad44-41f5-85e6-69750be11882",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/sites",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"sites"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get site columns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "67040f57-15ee-4f64-ade7-fd85ddc1abed",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-2e057f60-9841-4553-b037-d9ec9cb52c24",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/columns",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"columns"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get site content types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "edad8ed1-5af6-428b-9dc8-cb58b080474e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1e650eb2-525b-4582-a59e-13a17e6721a9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/contentTypes",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"contentTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get site lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1cf54657-334a-4fd0-b58f-095e43fff33d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ListId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-fb2d07af-df30-4a14-a4d1-dd2c1c9242a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/lists",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list columns",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b5a22a54-08ea-46fd-8027-9dd8a80d1347",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c0042be6-d045-4cff-abec-7265a5313893",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/columns",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"lists",
										"{{ListId}}",
										"columns"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list content types",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e396b62d-0450-468a-aefd-6812958537ad",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-58d2365d-05df-4406-a549-259f9838f656",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/contentTypes",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"lists",
										"{{ListId}}",
										"contentTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list items",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08ac3119-8845-43ab-b5d6-573fb39e055c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-399e53f0-8684-45d5-bfec-2c979388f26f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/items",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"lists",
										"{{ListId}}",
										"items"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get list items titled \"Contoso Home\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "68b4b1e3-40d1-40e4-a2a5-05214fb9dfa9",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-17299c7c-a6f9-43db-af46-dbe5a6bb83a5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "HonorNonIndexedQueriesWarningMayFailRandomly",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/root/lists/{{ListId}}/items?$filter=fields/Title eq 'Contoso Home'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"root",
										"lists",
										"{{ListId}}",
										"items"
									],
									"query": [
										{
											"key": "$filter",
											"value": "fields/Title eq 'Contoso Home'"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-22599cd9-6a8c-42b9-ac35-b76bbedb9189"
				},
				{
					"name": "Applications",
					"item": [
						{
							"name": "Get applications",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "10eef7ee-396c-47f9-950b-c839319f99bd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1095e179-7d06-459b-b646-9d0def171274",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/applications",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1a4e624b-61eb-490c-856b-d68ed98d22ca",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ApplicationId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1fb8d8f7-515a-4967-9906-33e7446dc5db",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"My App\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/applications",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"applications"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9acc2a15-b574-4ae7-9905-4e61482c54c2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-941f18a7-482b-4015-b6d6-b700b89b0ffa",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/applications/{{ApplicationId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"applications",
										"{{ApplicationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get application owners",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e65e0165-689d-4ea0-8cfb-c530b33e6e28",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8aeb0bfb-5cc7-47e7-a079-384ea795df4f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/applications/{{ApplicationId}}/owners",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"applications",
										"{{ApplicationId}}",
										"owners"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8cf072c2-ec18-448e-b335-f9efdd23769e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ceb15f56-177e-470b-957a-6c51cfe0d968",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"signInAudience\": \"AzureADMyOrg\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/applications/{{ApplicationId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"applications",
										"{{ApplicationId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete application",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7dc581e8-6f2c-4f01-992b-c252231dd457",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ApplicationId\", \"\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-24947a5b-b48a-49e3-9019-665d9af2560d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/applications/{{ApplicationId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"applications",
										"{{ApplicationId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-0cb69aa5-3b77-494a-a392-cae74b596e35"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Get subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "86d61a89-0eb8-47bb-8209-cb7235f975fb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-6625e10b-3c06-418f-8d67-8afde1784676",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/subscriptions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"subscriptions"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-ecc0121e-3e2f-4e78-aa6a-edf083d7c953"
				},
				{
					"name": "Compliance",
					"item": [
						{
							"name": "Subject Rights Request",
							"item": [
								{
									"name": "Create DSR",
									"item": [
										{
											"name": "Create subjectRightsRequest",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "2ac0a442-331f-440f-b5a4-47986c150f0a",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"subjectRightsRequestId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-36660875-8c60-4f87-ae89-0798b8c2e105",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"type\": \"access\",\n    \"dataSubjectType\": \"currentEmployee\",\n    \"regulations\": [\"Test Regulation\"],\n    \"displayName\": \"{{createRequestDisplayName}}\",\n    \"description\": \"{{createRequestDescription}}\",\n    \"internalDueDateTime\": \"{{internalDueDateTime}}\",\n    \"dataSubject\": {\n        \"firstName\": \"{{firstName}}\",\n        \"lastName\": \"{{lastName}}\",\n        \"email\": \"{{email}}\",\n        \"residency\": \"5000 148th Ave NE, Redmond, WA 98052\",\n        \"phoneNumber\": \"(425) 867-6537\",\n        \"SSN\": \"555-55-5555\"\n    }\n}"
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests"
													]
												}
											},
											"response": []
										},
										{
											"name": "List subjectRightsRequests",
											"id": "29708525-cfaf3c37-41a3-4d3a-b6ea-9234d68548bc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-4148c84d-8951-4e5a-8996-5036258e9c5f"
								},
								{
									"name": "Track DSR Status",
									"item": [
										{
											"name": "Get subjectRightsRequest",
											"id": "29708525-e91487ff-cd91-4643-af32-29569bc72c7f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests/{{subjectRightsRequestId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests",
														"{{subjectRightsRequestId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "subjectRightsRequest: getFinalReport",
											"id": "29708525-3cc77fb4-7e0e-45e0-8b3e-e2776c0c6826",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests/{{subjectRightsRequestId}}/getFinalReport",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests",
														"{{subjectRightsRequestId}}",
														"getFinalReport"
													]
												}
											},
											"response": []
										},
										{
											"name": "subjectRightsRequest: getFinalAttachment",
											"id": "29708525-edb4b72d-6137-4bf8-8665-0b4bf8ed9f61",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests/{{subjectRightsRequestId}}/getFinalAttachment",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests",
														"{{subjectRightsRequestId}}",
														"getFinalAttachment"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create authoredNote",
											"id": "29708525-57e384a6-12c8-40eb-bb49-446cd8698dad",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n\"content\": \n  {\n    \"content\": \"This is a Microsoft Graph note!\",\n    \"contentType\": \"text\"\n  }\n}"
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests/{{subjectRightsRequestId}}/notes",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests",
														"{{subjectRightsRequestId}}",
														"notes"
													]
												}
											},
											"response": []
										},
										{
											"name": "List notes",
											"id": "29708525-8833e444-c1ca-4142-8755-fa3d0a9fc6d0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/privacy/subjectRightsRequests/{{subjectRightsRequestId}}/notes",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"privacy",
														"subjectRightsRequests",
														"{{subjectRightsRequestId}}",
														"notes"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-fd90b521-4495-4179-9736-ed041c4cd278"
								}
							],
							"id": "29708525-e7976e2b-aebd-49e0-9345-e54866488579"
						},
						{
							"name": "Records Management",
							"item": [
								{
									"name": "Label Management",
									"item": [
										{
											"name": "List retentionLabels",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "16b840e4-6a67-4f0a-8999-c8d4b0fd291c",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-ea34ec06-06bd-49e7-b407-aebf47089529",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"labels",
														"retentionLabels"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create retentionLabel",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"retentionLabelId\", json.id);"
														],
														"id": "44e84e29-2cfb-4fbf-9afe-922bb0742bbf"
													}
												}
											],
											"id": "29708525-c289fccf-4fd0-4cfc-9ecb-f25968c60187",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"displayName\": \"{{labelDisplayName}}\",\n  \"behaviorDuringRetentionPeriod\": \"retain\",\n  \"actionAfterRetentionPeriod\": \"none\",\n  \"retentionTrigger\": \"dateLabeled\",\n  \"retentionDuration\": {\n    \"@odata.type\": \"microsoft.graph.security.retentionDurationInDays\",\n    \"days\": \"2555\"\n  },\n  \"descriptionForAdmins\": \"{{labelDescriptionForAdmins}}\",\n  \"descriptionForUsers\": \"{{labelDescriptionForUsers}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"labels",
														"retentionLabels"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get retentionLabel",
											"id": "29708525-c1064268-d9ea-4da8-bb9a-e98574b2ae4b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels/{{retentionLabelId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"labels",
														"retentionLabels",
														"{{retentionLabelId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update retentionLabel",
											"id": "29708525-c6a25401-0545-4eba-abfd-483cf3b9611b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"descriptionForAdmins\": \"Updated description for Admins\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels/{{retentionLabelId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"labels",
														"retentionLabels",
														"{{retentionLabelId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete rentionionLabel",
											"id": "29708525-bda42f2f-a6b6-421e-a0e6-3d6e3d7bf843",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels/{{retentionLabelId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"labels",
														"retentionLabels",
														"{{retentionLabelId}}"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-cb6ede4c-d19a-4417-b6ef-6516be56a49f"
								},
								{
									"name": "Trigger Event for Existing Label",
									"item": [
										{
											"name": "List retentionEventTypes",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"retentionEventTypeId\", json.value[0].id);"
														],
														"id": "92791184-600d-4e16-8c33-164bb9c833b6"
													}
												}
											],
											"id": "29708525-710f064d-ef26-4297-ab88-551bb90f3194",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/triggerTypes/retentionEventTypes",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"triggerTypes",
														"retentionEventTypes"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get retentionEventType",
											"id": "29708525-4e585e99-3c87-4480-a6b2-e0a050cbfc7b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/triggerTypes/retentionEventTypes/{{retentionEventTypeId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"triggerTypes",
														"retentionEventTypes",
														"{{retentionEventTypeId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create retentionEvent",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b4a78f58-a08b-4c51-881f-52827fa737a3",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"retentionEventId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-ea5dbf72-a5aa-476c-a730-f50eeed2840c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"{{eventDisplayName}}\",\n    \"description\": \"{{eventDescription}}\",\n    \"eventQueries\": [\n        {\n            \"queryType\": \"files\",\n            \"query\": \"12345\"\n        },\n        {\n            \"queryType\": \"messages\",\n            \"query\": \"test\"\n        }\n    ],\n    \"eventTriggerDateTime\": \"2022-09-14T00:00:00Z\",\n    \"retentionEventType@odata.bind\": \"https://graph.microsoft.com/beta/security/triggerTypes/retentionEventTypes/{{retentionEventTypeId}}\" \n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/triggers/retentionEvents",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"triggers",
														"retentionEvents"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get retentionEvent",
											"id": "29708525-661fe7d8-3f08-4f06-a4c8-cf2a5a3a4e5a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/triggers/retentionEvents/{{retentionEventId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"triggers",
														"retentionEvents",
														"{{retentionEventId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "List retentionEvents",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"retentionEventId\", json.value[0].id);"
														],
														"id": "aa7d40ee-66d6-41c9-b6d7-8293ecf7f45d"
													}
												}
											],
											"id": "29708525-d6ad74c1-ca06-430c-8c04-de9f82200d11",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/security/triggers/retentionEvents",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"security",
														"triggers",
														"retentionEvents"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-cb5f6176-a227-4a28-be23-057717ff2afa"
								}
							],
							"id": "29708525-0dada84a-8205-438d-8dd1-6cc2aa3936ce"
						}
					],
					"id": "29708525-95e3c5ac-edf2-4dba-b14b-fb08a9c6f2cd"
				},
				{
					"name": "Extensions",
					"item": [
						{
							"name": "Open extensions",
							"item": [
								{
									"name": "Get an open extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "45a2ab56-fbce-4d97-94d1-19018e27c03d",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-9347f99f-ce06-4641-9b1b-51980c62389d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/me?$select=id,displayName,mail,mobilePhone&$expand=extensions",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"me"
											],
											"query": [
												{
													"key": "$select",
													"value": "id,displayName,mail,mobilePhone"
												},
												{
													"key": "$expand",
													"value": "extensions"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Create an open extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8d98b656-7560-4265-ac2c-ce82511192ed",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-15a38929-e287-4adc-b82f-8fd44bfd1ce6",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"@odata.type\": \"microsoft.graph.openTypeExtension\",\n  \"extensionName\": \"com.contoso.roamingSettings\",\n  \"theme\": \"dark\",\n  \"color\": \"purple\",\n  \"lang\": \"Japanese\"\n}"
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/me/extensions",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"me",
												"extensions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update an open extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "738007f5-708c-49e6-9ea8-0a978327970a",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-843bfd5d-29fc-4493-8a77-071ddcfe99ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"theme\": \"light\",\n  \"color\": \"red\",\n  \"lang\": \"Swahili\"\n}"
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/me/extensions/{{ExtensionId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"me",
												"extensions",
												"{{ExtensionId}}"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-95cd2d57-9b62-4709-bdb7-b56e577bd661"
						},
						{
							"name": "Schema extensions",
							"item": [
								{
									"name": "Get avaiable schema extensions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "195ee560-4a6c-4ce7-b2d8-c3196710c753",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-35ad31d1-4f58-4854-9633-0617c6cc90ed",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/schemaExtensions",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"schemaExtensions"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create a group with extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "4a20b2ac-30b7-4b9c-a85c-24b4975fe1c3",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-cd4d59f6-7cb0-4071-bbf9-7f18ebe34454",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"displayName\": \"Extensions sample group\",\n  \"description\": \"Extensions sample group\",\n  \"groupTypes\": [\n    \"Unified\"\n  ],\n  \"mailEnabled\": true,\n  \"mailNickname\": \"extSample123\",\n  \"securityEnabled\": false,\n  \"adatumisv_courses\": {\n    \"id\": \"123\",\n    \"name\": \"New Managers\",\n    \"type\": \"Online\"\n  }\n}"
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/groups",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"groups"
											]
										}
									},
									"response": []
								},
								{
									"name": "Filter groups by extensions",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "90f06e45-1770-491d-8749-8a725093e3db",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-f334c717-8033-4b89-a550-08195217ec8f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/groups?$filter=adatumisv_courses/id eq '123'&$select=id,displayName,adatumisv_courses",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"groups"
											],
											"query": [
												{
													"key": "$filter",
													"value": "adatumisv_courses/id eq '123'"
												},
												{
													"key": "$select",
													"value": "id,displayName,adatumisv_courses"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Update a group with extension",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "b8b975a8-9dec-4fef-845a-279fe9f11e01",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-5a6882de-6639-49af-988f-e36057df1e7e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{UserAccessToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "SdkVersion",
												"type": "text",
												"value": "postman-graph/v2.0"
											},
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"adatumisv_courses\": {\n    \"id\": \"123\",\n    \"name\": \"More Managers\",\n    \"type\": \"Online\"\n  }\n}"
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"groups",
												"{{GroupId}}"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-079c951f-5ec4-46b0-8b80-5fa45ca4e0cb"
						}
					],
					"id": "29708525-823a259d-6fdf-4199-aa11-31b8ad990b93"
				},
				{
					"name": "Batch",
					"item": [
						{
							"name": "Perform parallel GETS",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2bc8ce8b-3727-43fe-bbec-fe12237ef890",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-9df36c20-d7f5-436c-95b9-2453e0d54973",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requests\": [\n    {\n      \"url\": \"/me?$select=displayName,jobTitle,userPrincipalName\",\n      \"method\": \"GET\",\n      \"id\": \"1\"\n    },\n    {\n      \"url\": \"/me/messages?$filter=importance eq 'high'&$select=from,subject,receivedDateTime,bodyPreview\",\n      \"method\": \"GET\",\n      \"id\": \"2\"\n    },\n    {\n      \"url\": \"/me/events\",\n      \"method\": \"GET\",\n      \"id\": \"3\"\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/$batch",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"$batch"
									]
								}
							},
							"response": []
						},
						{
							"name": "Combine a POST and a GET",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "547920c6-ecc9-4ef5-8563-42f04c5bcf17",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c85c7468-d8a9-4c8e-8ae6-5d3a5018a593",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requests\": [\n    {\n      \"url\": \"/me/drive/root/children\",\n      \"method\": \"POST\",\n      \"id\": \"1\",\n      \"body\": {\n        \"name\": \"TestBatchingFolder\",\n        \"folder\": {}\n      },\n      \"headers\": {\n        \"Content-Type\": \"application/json\"\n      }\n    },\n    {\n      \"url\": \"/me/drive/root/children/TestBatchingFolder \",\n      \"method\": \"GET\",\n      \"id\": \"2\",\n      \"DependsOn\": [\n        \"1\"\n      ]\n    }\n  ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/$batch",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"$batch"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-9d1898a3-329e-460b-b985-d8875ec5b6f2"
				},
				{
					"name": "Security",
					"item": [
						{
							"name": "eDiscovery",
							"item": [
								{
									"name": "Case Creation",
									"item": [
										{
											"name": "List ediscoveryCases",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"id": "24e81b64-eb81-462f-872b-f59bac1d5f2d"
													}
												}
											],
											"id": "29708525-8f94d03e-cc6e-44e3-a458-a2d79c0dbdd6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ediscoveryCase",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoveryCaseId\", json.id);"
														],
														"id": "75417ce5-045e-4de4-9134-3af3986676db"
													}
												}
											],
											"id": "29708525-1b4c7d12-14e9-401c-ae0e-210b27d26f23",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"{{displayName}}\",\n    \"description\": \"{{description}}\",\n    \"externalId\": \"{{externalId}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get ediscoveryCase",
											"id": "29708525-b8dacded-19f8-4ebb-a933-12423720b8da",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ediscoveryCase",
											"id": "29708525-62332447-ad6e-44f8-8463-7e1da5e438fa",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"externalId\": \"Updated external case value 12345\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create Custodians",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"custodianId\", json.id);",
															"postman.setEnvironmentVariable(\"custodianEmail\", json.email);"
														],
														"id": "c4a232d4-fd53-40e3-936b-cb1ed8a9e4ed"
													}
												}
											],
											"id": "29708525-4bb004f4-d470-420e-881c-4924bc201e50",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\":\"{{custodianEmail}}\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians"
													]
												}
											},
											"response": []
										},
										{
											"name": "List ediscoveryCustodian",
											"id": "29708525-9f6d6b20-1d24-4a68-8be9-7641191ea6f6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create custodian userSource",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"custodianUserSource\", json.id);"
														],
														"id": "d260682c-7eb0-4994-8e88-4757b806c017"
													}
												}
											],
											"id": "29708525-9aecc301-e031-4112-8daf-40b75fba6a19",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"{{custodianEmail}}\",\n    \"includedSources\": \"mailbox, site\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/{{custodianId}}/userSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians",
														"{{custodianId}}",
														"userSources"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoveryCustodian: applyHold",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"id": "4f08ad23-1d96-4951-9248-59d699411160"
													}
												}
											],
											"id": "29708525-7d7f7596-c265-4d6d-8769-02584e82e7cc",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"{{custodianId}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/applyHold",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians",
														"applyHold"
													]
												}
											},
											"response": []
										},
										{
											"name": "List userSources",
											"id": "29708525-52dad5d3-5b47-486f-8a89-dd99939ab36f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/{{custodianId}}/userSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"custodians",
														"{{custodianId}}",
														"userSources"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ediscoveryNoncustodialDataSources",
											"event": [
												{
													"listen": "test",
													"script": {
														"type": "text/javascript",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"noncustodialId\", json.id);",
															"postman.setEnvironmentVariable(\"noncustodialDataSource\", json.id);"
														],
														"id": "631f95cd-d182-4195-a6ed-8b234f94ccec"
													}
												}
											],
											"id": "29708525-83fc5095-025d-4a4c-9acb-3b1731250ac6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"dataSource\": {\n        \"@odata.type\": \"microsoft.graph.security.userSource\",\n        \"email\": \"{{noncustodialEmail}}\"\n    }\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialDataSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"noncustodialDataSources"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoveryNoncustodialDataSource: applyHold",
											"id": "29708525-f7632dd2-548c-4b2a-9b89-03d0c386ed8f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"ids\": [\n    \"{{noncustodialId}}\"\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialDataSources/applyHold",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"noncustodialDataSources",
														"applyHold"
													]
												}
											},
											"response": []
										},
										{
											"name": "List ediscoveryNoncustodialDataSources",
											"id": "29708525-3d847e3a-f6f7-4838-8b8c-85fadbe295a1",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialDataSources",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"noncustodialDataSources"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-03924a30-a740-4bb0-bab8-c43b8d71f914"
								},
								{
									"name": "Workflow automation",
									"item": [
										{
											"name": "Create searches",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "8a79503a-d0f6-4e12-9fe7-4d283e05db54",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoverySearchId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-221c3072-0a72-4211-876a-795611520682",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Microsoft Graph Search\",\n    \"description\": \"This is an eDiscovery Premium search using Microsoft Graph\",\n    \"contentQuery\": \"HasAttachment=true\",\n    \"custodianSources@odata.bind\": [\n        \"https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/custodians/{{custodianId}}/userSources/{{custodianUserSource}}\"\n    ],\n    \"noncustodialSources@odata.bind\": [\n        \"https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/noncustodialdatasources/{{noncustodialDataSource}}\"\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches"
													]
												}
											},
											"response": []
										},
										{
											"name": "List searches",
											"id": "29708525-30a3e13f-fe8c-47b8-b9b5-7a94199840ee",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoverySearch: estimate Statistics",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"id": "8559fe18-c66b-4f9b-aedb-dc82c3c75115"
													}
												}
											],
											"id": "29708525-cc8dd2c4-f2dd-462b-8e0c-b843e40d149c",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches/{{ediscoverySearchId}}/estimateStatistics",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches",
														"{{ediscoverySearchId}}",
														"estimateStatistics"
													]
												}
											},
											"response": []
										},
										{
											"name": "List lastEstimateStatisticsOperation",
											"id": "29708525-d26fcd83-17ba-4873-8485-14542aac8f39",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/searches/{{ediscoverySearchId}}/lastEstimateStatisticsOperation",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"searches",
														"{{ediscoverySearchId}}",
														"lastEstimateStatisticsOperation"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create reviewSets",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c84b330d-c967-4cc8-bfc3-78e388c14839",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoveryReviewSetId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-633af7d2-1f62-46b9-880b-b0c8709312f4",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"My Microsoft Graph Review Set\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets"
													]
												}
											},
											"response": []
										},
										{
											"name": "List reviewSets",
											"id": "29708525-45e139e5-926a-4d2b-b8c1-d4095db42b00",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets"
													]
												}
											},
											"response": []
										},
										{
											"name": "ediscoveryReviewSet: addToReviewSet",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															""
														],
														"type": "text/javascript",
														"id": "4fd496c9-ddba-4071-bd22-a015c28914f1"
													}
												}
											],
											"id": "29708525-5deeeca7-50ca-49e3-8a98-8128ffa6edb6",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"search\": {\n        \"id\": \"{{ediscoverySearchId}}\"\n    },\n    \"additionalDataOptions\": \"linkedFiles\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/addToReviewSet",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"addToReviewSet"
													]
												}
											},
											"response": []
										},
										{
											"name": "Create ediscoveryReviewSetQuery",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "9692b724-4ddb-4ade-ba67-3e8580ef0bce",
														"exec": [
															"var json = JSON.parse(responseBody);",
															"postman.setEnvironmentVariable(\"ediscoveryReviewSetQueryId\", json.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-23f865be-e5a3-4ca7-85c4-de0ccc0ba1f8",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Microsoft Graph Query\",\n    \"contentQuery\": \"(Author=\\\"edison\\\")\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update ediscoveryReviewSetQuery",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "69805c7b-f48d-4cfb-bcd0-2f18d243e41a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-03164058-75de-40c4-aa44-2c7f16bcfa89",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"displayName\": \"Microsoft Graph Query (Update)\",\n    \"contentQuery\": \"(ContentType=document)\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries/{{ediscoveryReviewSetQueryId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries",
														"{{ediscoveryReviewSetQueryId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "List queries",
											"id": "29708525-c57b2c9e-3da1-4810-b46b-fdb154a9d860",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete ediscoveryReviewSetQuery",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "3ce85e5e-909e-4756-b0c6-f527b1f3372a",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-0f599a53-c8ba-4125-9867-0d6a51780261",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/reviewSets/{{ediscoveryReviewSetId}}/queries/{{ediscoveryReviewSetQueryId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"reviewSets",
														"{{ediscoveryReviewSetId}}",
														"queries",
														"{{ediscoveryReviewSetQueryId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "List caseOperations",
											"id": "29708525-7c699b02-c546-4bd5-932c-b11e49cd554e",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json",
														"type": "text"
													}
												],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/security/cases/ediscoveryCases/{{ediscoveryCaseId}}/operations",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"security",
														"cases",
														"ediscoveryCases",
														"{{ediscoveryCaseId}}",
														"operations"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-b9b4c9a4-f421-491d-9fa4-02cdddb1975c"
								}
							],
							"id": "29708525-b76ea1a5-95d7-49a1-a6a5-29fb2f9ae6f8"
						},
						{
							"name": "Get alerts",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9d6110c8-b25b-46f3-878b-d1a2fba6d171",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-9f35863e-8235-4405-8835-8525c2a23348",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts with high severity",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1ebea104-b958-4604-a155-4bb110cb9333",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-bf5a03b5-3c05-467d-8365-8ca75a787dc0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Severity eq 'High'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Severity eq 'High'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts from Azure Security Center",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0c90fb41-fe12-434e-b371-444ffa364a44",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-49112bbd-187e-4b32-b5df-334f02d5b8a8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=vendorInformation/provider eq 'ASC'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "vendorInformation/provider eq 'ASC'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by category",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b8dd8963-0ae5-4bfd-84b5-e3e7ba1da8ca",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a357a4cd-f3c9-4d8e-92ca-b6e3a4dab672",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Category eq 'ransomware'&$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Category eq 'ransomware'"
										},
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by destination",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08dd1277-edc8-4a7d-9ee5-242ef7ca9858",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-b2c0ba4e-1301-4eac-b016-7b75b579aea1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=networkConnections/any(d:d/destinationAddress eq '{destination-address}')",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "networkConnections/any(d:d/destinationAddress eq '{destination-address}')"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get alerts filtered by status",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c273eca1-4985-46c8-8012-f281000402f8",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f63fbd6b-e91c-4bfe-b356-d31d9c0362ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/alerts?$filter=Status eq 'NewAlert'&$top=1",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"alerts"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Status eq 'NewAlert'"
										},
										{
											"key": "$top",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get secure scores",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d886a88e-fffd-43ec-83a2-e190d69f398f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-be5de5cd-5a55-4146-b041-9291839abb2e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/security/secureScores?$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"security",
										"secureScores"
									],
									"query": [
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get secure scores control profiles",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "83cc60c2-d74f-47cf-abba-a93fb5643a84",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-29ff6127-9adb-4ff8-b571-a2fd0f909248",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/secureScoreControlProfiles?$top=5",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"secureScoreControlProfiles"
									],
									"query": [
										{
											"key": "$top",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get TI indicators",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c409dd70-8bb3-438e-b079-789ea8df8d01",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TIIndicatorId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-6e90d63c-00d7-45bb-853f-a9d0588aa814",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/tiIndicators",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"tiIndicators"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get TI indicator by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7f1895f3-88f0-4983-9d0d-7a4080c6ba54",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityEvents.Read.All, SecurityEvents.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a741bb59-8ba5-43cc-bf32-e799231b5e97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/tiIndicators/{{TIIndicatorId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"tiIndicators",
										"{{TIIndicatorId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get security actions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f65fa992-2ff3-4788-96bb-17a175451d64",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-582a4e11-3778-4601-9eb8-7077e230d9a1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/securityActions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"securityActions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get security action by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dd57c23-3e05-471b-be54-c71242155d25",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8ec1d305-d517-4e9a-b138-f33c6e595782",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/securityActions/{{SecurityActionsId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"securityActions",
										"{{SecurityActionsId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "List retention labels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dd57c23-3e05-471b-be54-c71242155d25",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-009666f9-2a64-4d87-b50e-620056ecb1b8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"labels",
										"retentionLabels"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-a956d864-ad65-4fec-9341-a784cca5ada0"
				},
				{
					"name": "Windows Updates (beta)",
					"item": [
						{
							"name": "Catalog",
							"item": [
								{
									"name": "List catalog entries",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "8b9e847e-831d-4272-ae4e-f13211ca4caa",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-37b91033-e886-4003-b8ca-a374ec31b5ec",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/catalog/entries",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"catalog",
												"entries"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-c7680411-f92a-491d-9d90-7ef1546c2749"
						},
						{
							"name": "Deployment",
							"item": [
								{
									"name": "Deployment audience",
									"item": [
										{
											"name": "List members",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c9acb706-5cef-494b-be10-855d87cbcd60",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-467d7e4f-c11b-4ce6-a8d7-d614f9217138",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/members",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{DeploymentId}}",
														"audience",
														"members"
													]
												}
											},
											"response": []
										},
										{
											"name": "List exclusions",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a98a9c51-1073-46f7-854f-200029538208",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-9bf13074-8359-48f5-97b8-e235924ecfd3",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/exclusions",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{DeploymentId}}",
														"audience",
														"exclusions"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update audience (add members)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "294460cc-8907-4619-86cf-6f2624d8fde0",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-0cd2d6ce-4d4a-4b19-979b-b2d7cb625df9",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addMembers\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{DeploymentId}}",
														"audience",
														"updateAudience"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update audience (add exclusions)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "949378ef-07e3-489a-991f-dfb3bd222429",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-72dd23c4-e27f-4df4-9846-308f8f36e85f",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"addExclusions\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{DeploymentId}}",
														"audience",
														"updateAudience"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update audience (remove members)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "bcc4721b-ee59-4de4-b659-4e43f71cc9dd",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-10529dcd-549b-48aa-baa0-8ef80d2e6739",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeMembers\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{DeploymentId}}",
														"audience",
														"updateAudience"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update audience (remove exclusions)",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c527b61d-71c6-4688-ba63-0ffc1b94aef4",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-44825120-04f6-48eb-a0b1-4a83fc2ca544",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"removeExclusions\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\" // deadbeef-cad1-4da9-b357-3ee3cde5d50a\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}/audience/updateAudience",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{DeploymentId}}",
														"audience",
														"updateAudience"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-ab2db1ca-b6c5-421c-8397-2dedbde7c290"
								},
								{
									"name": "Create deployment (feature update)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "29ae04f7-61e9-46b9-ba4e-d915724ee04a",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-1bf78386-627c-425d-b050-38850192a2da",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.featureUpdateReference\",\n        \"version\": \"{{FeatureUpdateVersion}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create deployment (expedited security update)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "3e35fc08-55a6-4e9c-8a06-10e9fbdacfc8",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-5067d853-ad81-4696-8e0e-471839de69ab",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.expeditedQualityUpdateReference\",\n        \"releaseDate\": \"{{QualityUpdateReleaseDate}}\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create deployment (rate-based gradual rollout)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "e215f535-666d-4bdf-af76-7539b9314243",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-ee1d5f29-de28-40f6-9084-5207c9ebb419",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.featureUpdateReference\",\n        \"version\": \"{{FeatureUpdateVersion}}\"\n    },\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.windowsDeploymentSettings\",\n        \"rollout\": {\n            \"devicesPerOffer\": 100,\n            \"durationBetweenOffers\": \"P7D\"\n        },\n        \"monitoring\": {\n            \"monitoringRules\": [\n                {\n                    \"@odata.type\": \"#microsoft.graph.windowsUpdates.monitoringRule\",\n                    \"signal\": \"rollback\",\n                    \"threshold\": 5,\n                    \"action\": \"pauseDeployment\"\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create deployment (date-based gradual rollout)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e514a00-5d79-4e15-8e91-e033a566089d",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-3fc176cf-f5b1-4f41-a821-b003023816f1",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"content\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.featureUpdateReference\",\n        \"version\": \"{{FeatureUpdateVersion}}\"\n    },\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.windowsDeploymentSettings\",\n        \"rollout\": {\n            \"startDateTime\": \"{{DeploymentStartDateTime}}\",\n            \"endDateTime\": \"{{DeploymentEndDateTime}}\",\n            \"durationBetweenOffers\": \"P7D\"\n        },\n        \"monitoring\": {\n            \"monitoringRules\": [\n                {\n                    \"@odata.type\": \"#microsoft.graph.windowsUpdates.monitoringRule\",\n                    \"signal\": \"rollback\",\n                    \"threshold\": 5,\n                    \"action\": \"pauseDeployment\"\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments"
											]
										}
									},
									"response": []
								},
								{
									"name": "List deployments",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "37492364-156a-472e-a03d-1bdc05cde664",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-aec55c3e-be79-4240-8f5c-a2d3db995780",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get deployment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2d516135-a3a5-4bda-9446-c683dc8574a5",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-3298545e-f5f8-43de-907d-590e141ec3e7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments",
												"{{DeploymentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update deployment (replace monitoring rules)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "68d46093-12f7-4cc4-8289-45155b2f8ca7",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-262968cc-a90d-4f3b-b569-d3a34a28c7d7",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"settings\": {\n        \"@odata.type\": \"microsoft.graph.windowsUpdates.windowsDeploymentSettings\",\n        \"monitoring\": {\n            \"monitoringRules\": [\n                {\n                    \"signal\": \"rollback\",\n                    \"threshold\": 5,\n                    \"action\": \"pauseDeployment\"\n                }\n            ]\n        }\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments",
												"{{DeploymentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update deployment (request paused state)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "489da391-2696-42b2-b772-6a0ba357c3df",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-b724f820-665d-4aea-869a-08abd0a99e7b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.deploymentState\",\n        \"requestedValue\": \"paused\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments",
												"{{DeploymentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update deployment (clear requested state)",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "eb693237-0825-48ae-ac38-993ff128c87e",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-fd2cdc02-31b1-4c59-86e2-36f578db8ee5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"state\": {\n        \"@odata.type\": \"#microsoft.graph.windowsUpdates.deploymentState\",\n        \"requestedValue\": \"none\"\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments",
												"{{DeploymentId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete deployment",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "d14bd2fe-339b-4f88-b708-cbfbb584acdb",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-8db7986b-68d5-48f4-bab1-d3de1efe6cb5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{DeploymentId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments",
												"{{DeploymentId}}"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-7914cee2-7ee6-4f6e-9702-1c217326b475"
						},
						{
							"name": "Updatable asset",
							"item": [
								{
									"name": "Azure AD device",
									"item": [
										{
											"name": "List Azure AD devices",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "c934506b-545b-43b8-b86b-eb2fac691619",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-477e13b7-b628-4f73-a0b8-523f9f2d7b80",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/?$filter=isof('microsoft.graph.windowsUpdates.azureADDevice')",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"updatableAssets",
														""
													],
													"query": [
														{
															"key": "$filter",
															"value": "isof('microsoft.graph.windowsUpdates.azureADDevice')"
														}
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Azure AD device",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "54aa8ee8-6a22-49d3-8bb1-4b1976ec7d89",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-17d1e434-f1e2-4cde-b14f-eae259ebae34",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/{{UpdatableAssetId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"updatableAssets",
														"{{UpdatableAssetId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete Azure AD device",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "0aaa8200-bd4a-417b-a1b8-36cc01b2c5b3",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-0c7628e0-6484-4abe-b80d-07abcd6e7539",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{UpdatableAssetId}}",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"deployments",
														"{{UpdatableAssetId}}"
													]
												}
											},
											"response": []
										},
										{
											"name": "Enroll in feature update management",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "47219eee-d4e8-4067-8d2f-8350eebaa334",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-d569164b-f5aa-415b-af48-106602bca8e0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"updateCategory\": \"feature\",\n    \"assets\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/enrollAssets",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"updatableAssets",
														"enrollAssets"
													]
												}
											},
											"response": []
										},
										{
											"name": "Unenroll from feature update management",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "b3aa3731-bf00-4780-b91b-859c8e92c465",
														"exec": [
															"try {",
															"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
															"    {",
															"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"    }",
															"    else",
															"    {",
															"        if (pm.response.status === \"Forbidden\")",
															"        {",
															"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
															"        }",
															"    }",
															"}",
															"catch (e) {",
															"    console.log(e);",
															"}",
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-675e1471-e4a5-4cc8-9c55-7fbea3cc8143",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"updateCategory\": \"feature\",\n    \"assets\": [\n        {\n            \"@odata.type\": \"#microsoft.graph.windowsUpdates.azureADDevice\",\n            \"id\": \"{{AzureAdDeviceId}}\"\n        }\n    ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/unenrollAssets",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"admin",
														"windows",
														"updates",
														"updatableAssets",
														"unenrollAssets"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-fec731c4-33d7-4c5f-9922-2bb493ce0fd5"
								},
								{
									"name": "List updatable assets",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ab394c27-69ef-4320-80a2-0b328b393b07",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-9f12d025-ebaf-4986-b11f-8a0066927cc8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"updatableAssets"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get updatable asset",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9da46271-3df1-46bb-95e6-0233e69f1805",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-dee48dae-9a87-4c74-bfda-82358972c0d5",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/updatableAssets/{{UpdatableAssetId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"updatableAssets",
												"{{UpdatableAssetId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete updatable asset",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6b5f6acf-79d0-4e24-8762-7dda1b2c05e7",
												"exec": [
													"try {",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)",
													"    {",
													"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"    }",
													"    else",
													"    {",
													"        if (pm.response.status === \"Forbidden\")",
													"        {",
													"            console.log(\"You need to add user delegated permissions in your application to at least *WindowsUpdates.ReadWrite.All* in portal.azure.com and then grant admin consent. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");",
													"        }",
													"    }",
													"}",
													"catch (e) {",
													"    console.log(e);",
													"}",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-be18d926-83ee-4600-b06e-c3e632506e6f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/beta/admin/windows/updates/deployments/{{UpdatableAssetId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"beta",
												"admin",
												"windows",
												"updates",
												"deployments",
												"{{UpdatableAssetId}}"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-273b9f3a-678c-4962-aaa7-80dfb406f202"
						}
					],
					"id": "29708525-ccb0ee05-9857-4880-a92a-c9dcb1eb3302"
				},
				{
					"name": "Groups",
					"item": [
						{
							"name": "Get groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "353d4a17-9f80-4e77-8a54-26ddb4617bba",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"GroupId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-eaa378d3-8b8f-4a53-b1ce-a1249a85d3c1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/groups",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"groups"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-4cda8d88-c1b5-486f-8ef0-f2a9ad9d2494"
				},
				{
					"name": "Insights",
					"item": [
						{
							"name": "Get items trending around me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "72ed7f8e-8ca0-4fc5-bbb7-89ec16ef015c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-9f8b1c38-1526-4a66-a284-233d0dbcda71",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/me/insights/trending",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"me",
										"insights",
										"trending"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people I'm working with",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "089b7258-1ab9-48b3-9ec2-0b508b855df4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-5843d0be-bb73-44b8-97b1-f809503e9ddc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/me/workingWith",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"me",
										"workingWith"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-09d34424-386f-4553-8301-5f8212de6d55"
				},
				{
					"name": "Events",
					"item": [
						{
							"name": "Get rooms",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "591289c0-9ca4-484b-b894-f53b350a7dde",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-9659ce11-7fc0-4821-a9dc-adac6fca2093",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/me/findRooms",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"me",
										"findRooms"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my events for next week",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4dde4053-b2b9-46c0-93ed-be671c5016fa",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Calendar.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"EventId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "6c590a9b-8f56-4b6f-9b9a-782eed87c3ce",
										"exec": [
											"postman.setEnvironmentVariable('Today',(new Date()).toISOString());",
											"postman.setEnvironmentVariable('NextWeek',(new Date().addDays(7)).toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-4af210b1-440c-4bdf-ab88-2d17985f8204",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/calendarview?startdatetime={{Today}}&enddatetime={{NextWeek}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"calendarview"
									],
									"query": [
										{
											"key": "startdatetime",
											"value": "{{Today}}"
										},
										{
											"key": "enddatetime",
											"value": "{{NextWeek}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my calendars",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "28efef57-eaec-43e0-888e-b93431d704e7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"CalendarId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-294ada5e-831d-468a-80e4-1781fa49771e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/calendars",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"calendars"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Microsoft Graph community call event",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4f2ff997-602a-4af5-a8ab-aad3c0a8b8da",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Calendar.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a3f5ac38-24dc-41a9-adb2-cb077b3ae6f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"subject\": \"Microsoft Graph community call\",\n  \"body\": {\n    \"contentType\": \"HTML\",\n    \"content\": \"Call link: https://aka.ms/mmkv1b Submit a question: https://aka.ms/ybuw2i\"\n  },\n  \"start\": {\n    \"dateTime\": \"2018-09-04T08:00:00\",\n    \"timeZone\": \"Pacific Standard Time\"\n  },\n  \"end\": {\n    \"dateTime\": \"2018-09-04T09:00:00\",\n    \"timeZone\": \"Pacific Standard Time\"\n  },\n  \"location\": {\n    \"displayName\": \"Skype for Business\"\n  },\n  \"recurrence\": {\n    \"pattern\": {\n      \"type\": \"relativeMonthly\",\n      \"interval\": 1,\n      \"daysOfWeek\": [\n        \"Tuesday\"\n      ],\n      \"index\": \"first\"\n    },\n    \"range\": {\n      \"type\": \"noEnd\",\n      \"startDate\": \"2017-08-29\"\n    }\n  }\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/events",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"events"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my Microsoft Graph community call events",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c812d6bd-3bca-424e-bb6d-6c07e6e439c7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Calendar.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "0bef2207-8e0d-4f59-be6e-d02209d252ab",
										"exec": [
											"postman.setEnvironmentVariable('Today',(new Date()).toISOString());",
											"postman.setEnvironmentVariable('NextWeek',(new Date()).toISOString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-56d38efc-05a9-433d-9c10-590fefa98a15",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/events?$filter=subject eq 'Microsoft Graph community call'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"events"
									],
									"query": [
										{
											"key": "$filter",
											"value": "subject eq 'Microsoft Graph community call'"
										}
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-294852be-90e1-4774-8654-c5cb191c1fd5"
				},
				{
					"name": "Mail",
					"item": [
						{
							"name": "Get my messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0e3f5f87-5465-45b4-be3f-ad30cc29a104",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-26407e2f-3d9b-45e8-8abc-0f3122250aab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my important messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12b56935-4e5e-47e4-99b8-9970b1d98d9c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-b0ec59ed-829d-4793-8ad1-dac2d9abb1ad",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$filter=importance eq 'high'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$filter",
											"value": "importance eq 'high'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my messages from an address",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "fae1bad3-c711-4f2d-b3d9-36bfe5f80d3b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-3373dc41-a5dd-4792-9039-d698652b670b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$filter=(from/emailAddress/address) eq '{{UserName}}'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$filter",
											"value": "(from/emailAddress/address) eq '{{UserName}}'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Search my messages for \"Weekly Digest\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c26e53aa-f0ee-40f1-ab0b-393b99d25a4e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-0382aa97-1036-4725-8e01-5f889a74a384",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$search=\"Weekly Digest\"",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$search",
											"value": "\"Weekly Digest\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my messages I'm at mentioned in",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e586916-624b-4701-8379-b8d7b7da1f20",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-474d8ec6-3237-43d7-89b5-cdcbc40e4b45",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/me/messages?$filter=mentionsPreview/isMentioned eq true&$select=subject,sender,receivedDateTime",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$filter",
											"value": "mentionsPreview/isMentioned eq true"
										},
										{
											"key": "$select",
											"value": "subject,sender,receivedDateTime"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "16362b08-56a7-4e26-83ef-436c0dfda6cd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Mail.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.environment.get(\"MessageId\") === \"\")\r",
											"            {\r",
											"                console.log(\"You need to run *Delegated | Mail | Get my messages* request first or set a MessageId environment variable.\");\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-84cd3212-303e-44d3-a853-9c8abe920d49",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages/{{MessageId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages",
										"{{MessageId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my mailbox rules",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b7982dca-df83-4698-b58a-65598c95f0e1",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-5244abc3-7ace-46ad-a3ea-ed2cc99095e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/mailFolders/inbox/messagerules",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"mailFolders",
										"inbox",
										"messagerules"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my categories",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5dcd0170-dfa0-48a0-9fb2-4b327e56cbfd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-652d24d5-9811-428c-9bd5-23b6cff1db12",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/outlook/masterCategories",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"outlook",
										"masterCategories"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get email headers",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0786e6da-be67-4e19-804c-fc9e87833989",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c684885c-ef5e-403f-b63b-3516df741eac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/messages?$select=internetMessageHeaders&$top=1",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"messages"
									],
									"query": [
										{
											"key": "$select",
											"value": "internetMessageHeaders"
										},
										{
											"key": "$top",
											"value": "1"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Send mail",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4e6eb24a-40cd-44d8-9f5c-9e1aa17e7a55",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserEmail\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need manual set a **UserName** environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add user delegated permissions in your application to at least *Mail.Send* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1bd9e943-10ef-41ec-8b63-bab93dccf5e7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"message\": {\r\n    \"subject\": \"Meet for lunch?\",\r\n    \"body\": {\r\n      \"contentType\": \"Text\",\r\n      \"content\": \"The new cafeteria is open.\"\r\n    },\r\n    \"toRecipients\": [\r\n      {\r\n        \"emailAddress\": {\r\n          \"address\": \"{{UserName}}\"\r\n        }\r\n      }\r\n    ],\r\n    \"ccRecipients\": [\r\n      {\r\n        \"emailAddress\": {\r\n          \"address\": \"{{UserName}}\"\r\n        }\r\n      }\r\n    ]\r\n  },\r\n  \"saveToSentItems\": \"false\"\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/sendMail",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"sendMail"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get mailbox settings",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a7e0c7b6-e03f-45c1-a194-37680f02307d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-aac5bf43-a65a-4b42-b343-82d2d2dd35df",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/mailboxSettings",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"mailboxSettings"
									]
								}
							},
							"response": []
						},
						{
							"name": "Set automatic replies",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e589c38-9d94-40c8-9fe2-4e89a957a91a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *MailboxSettings.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-968bc66e-8e8f-46d2-b7b7-d80c96df7ff7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"@odata.context\": \"https://graph.microsoft.com/v1.0/$metadata#Me/mailboxSettings\",\r\n\"automaticRepliesSetting\": {\r\n        \"status\": \"scheduled\",\r\n        \"externalAudience\": \"contactsOnly\",\r\n        \"internalReplyMessage\": \"<html>\\n<body>\\n<div>I'm on vacation!</div>\\n<div><br>\\n</div>\\n<div>Kindly regards</div>\\n<div></div>\\n</body>\\n</html>\\n\",\r\n        \"externalReplyMessage\": \"<html>\\n<body>\\n<div></div>\\n<div>I'm on vacation.</div>\\n<div><br>\\n</div>\\n<div>Kindly regards</div>\\n</body>\\n</html>\\n\",\r\n        \"scheduledStartDateTime\": {\r\n            \"dateTime\": \"2019-07-15T08:00:00.0000000\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        },\r\n        \"scheduledEndDateTime\": {\r\n            \"dateTime\": \"2019-08-09T16:00:00.0000000\",\r\n            \"timeZone\": \"Europe/Berlin\"\r\n        }\r\n    }\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/mailboxSettings",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"mailboxSettings"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-d94b9eaa-b130-45a9-9c57-dec0f3fd185c"
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "Search messages",
							"id": "29708525-187694bf-408a-4034-8a84-05424258d755",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"message\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search file and connector interleaving Results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "9a79412e-725f-46a9-ad53-9af3cc0fc1a0",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *ExternalItem.Read.All, Files.Read.All, Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a8324d40-ffb4-4c8c-b1d5-10cf04b3678b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\",\n                \"externalItem\"\n            ],\n            \"contentSources\": [\n                \"/external/connections/*\"\n            ],\n            \"query\": {\n                \"queryString\": \"test\"\n            },\n            \"from\": 0,\n            \"size\": 15\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search teams messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92b10ecc-5218-4827-88bf-214a0e81c56a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Chat.Read, ChannelMessage.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-338ba74a-5384-44d8-849e-bb2240c1ea81",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"chatMessage\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search messages top results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e1892839-27d4-42f8-bb20-da8d81665d26",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ad3d0152-f605-4849-98b0-178da0519942",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"message\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"contoso\"\r\n            },\r\n            \"enableTopResults\": true\r\n        }\r\n    ]\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search events",
							"id": "29708525-177871b5-1a5f-4858-a9bf-227b87007b14",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"event\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search files and folders",
							"id": "29708525-33543dee-5462-4f27-8549-6080983b19dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n                //\"queryString\": \"contoso filetype:pdf OR filetype:docx\"\n                //\"queryString\": \"contoso path:\\\"https://contoso.sharepoint.com/sites/Team Site/Documents/\\\\\"\"                              \n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search lists",
							"id": "29708525-3d7f54c1-f67a-4864-aea1-7c3dd866c828",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"list\"\n            ],\n            \"query\": {\n                \"queryString\": \"*\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search list items",
							"id": "29708525-18a3d444-709f-4a22-8a1c-492688187d97",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search with XRANK",
							"id": "29708525-4a036aec-9d8c-47bc-b687-de30dcbefb5b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"cat XRANK(cb=100) dog\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search list items with property selection",
							"id": "29708525-9c5c134d-6d12-46b1-bc19-7b0fba418b7a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"issue\"\n            },\n            \"fields\": [\n                \"id\",\n                \"name\",                \n                \"contentclass\",\n                \"title\",\n                \"fooCustomProperty\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search sites",
							"id": "29708525-436cdb28-09f8-46eb-aca7-26255edf3890",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"site\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search drives",
							"id": "29708525-89193e93-3620-41f9-9b57-829eca55a08e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"drive\"\n            ],\n            \"query\": {\n                \"queryString\": \"*\"\n                //Note that personal OneDrive is not returned in this query\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search acronym",
							"id": "29708525-02b17e75-af96-4d8e-a6c6-dc4c928317e8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"acronym\"\n            ],\n            \"query\": {\n                \"queryString\": \"define KQL\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search bookmark",
							"id": "29708525-942ae03a-f78a-4ea5-a1f6-f8c75b2987bf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"bookmark\"\n            ],\n            \"query\": {\n                \"queryString\": \"yammer\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search qna",
							"id": "29708525-6e7a1ff3-bbac-4c02-bb3e-5b5403d7b391",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"bookmark\"\n            ],\n            \"query\": {\n                \"queryString\": \"yammer\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search with multiple requests",
							"id": "29708525-2b489b28-b040-4549-9803-055b9e08cb8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"bookmark\"\n            ],\n            \"query\": {\n                \"queryString\": \"yammer\"\n            }\n        },\n        {\n            \"entityTypes\": [\n                \"driveItem\",\"drive\",\"site\",\"list\",\"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"yammer\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search result template",
							"id": "29708525-95324f40-d6fa-4e3b-9cb4-d8a4aea66e17",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"externalItem\"\r\n            ],\r\n            \"contentSources\": [\r\n                \"/external/connections/sampleConnectionId\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"sample\"\r\n            },\r\n            \"resultTemplateOptions\": {\r\n                \"enableResultTemplate\": true\r\n            }\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search external items",
							"id": "29708525-31af5241-672b-4a40-8207-c87123b9c894",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"externalItem\"\n            ],\n            \"contentSources\": [\n                \"/external/connections/sampleConnectionId\"\n            ],\n            \"query\": {\n                \"queryString\": \"sample\"\n            },\n            \"fields\": [\n                \"title\",\n                \"iconurl\",\n                \"lastModifiedDate\"\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Page search results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f755ce8d-0572-4615-b7ee-dd379d2a766f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-e405bc10-c9c6-4bc3-aebc-9a80272c547a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"from\": 0,\n            \"size\": 15\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Sort search results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0ddf324e-1e0d-45fb-9bd7-151078a449e0",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-03f636c3-db2c-46c3-8608-46f1432ca113",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"sortProperties\": [\n                {\n                    \"name\": \"lastModifiedDateTime\",\n                    \"isDescending\": \"true\" // default is false\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Request spelling correction",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2faa2750-0f0c-4509-a35e-220339e43563",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-942c2fec-9148-44c0-b51a-48fa2340172d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "SdkVersion",
										"type": "text",
										"value": "postman-graph/v2.0"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"requests\": [\n    {\n      \"entityTypes\": [\n        \"message\"\n      ],\n      \"query\": {\n        \"queryString\": \"informatino\"\n      },\n      \"from\": 0,\n      \"size\": 5\n    }\n  ],\n  \"queryAlterationOptions\": {\n    \"enableSuggestion\": true,\n    \"enableModification\": true\n  }\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refine results with string aggregations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "646cd294-b073-4315-82a3-8244e85ee98e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-e92ba834-ad16-4e0c-b743-2fb3e0929641",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"aggregations\": [\n                {\n                    \"field\": \"FileType\",\n                    \"size\": 20,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"count\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                },\n                {\n                    \"field\": \"contentclass\",\n                    \"size\": 20,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"keyAsString\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Refine results with numeric aggregations",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a7c9b0a-2f5c-400a-89e8-ce43d4e8249b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-be090451-e264-43ad-97e6-9fc8cd155f86",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Requests\": [\n        {\n            \"entityTypes\": [\n                \"listItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"aggregations\": [\n                {\n                    \"field\": \"Size\",\n                    \"size\": 15,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"keyAsNumber\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0,\n                        \"ranges\": [\n                            {\n                                \"to\": \"100\"\n                            },\n                            {\n                                \"from\": \"100\",\n                                \"to\": \"1000\"\n                            },\n                            {\n                                \"from\": \"1000\"\n                            }\n                        ]\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Apply refined query passing the aggregationToken",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "340d94d2-b1c6-4b12-84ce-0063972acb5b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-50f67e1a-8578-457a-b028-85bb4cf6d98d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"Requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"aggregationFilters\": [\n                \"contentclass:\\\"ǂǂ5354535f4c6973744974656d5f446f63756d656e744c696272617279\\\"\",\n                \"FileType:\\\"ǂǂ646f6378\\\"\"                \n            ],\n            \"aggregations\": [\n                {\n                    \"field\": \"FileType\",\n                    \"size\": 20,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"count\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                },\n                {\n                    \"field\": \"contentclass\",\n                    \"size\": 15,\n                    \"bucketDefinition\": {\n                        \"sortBy\": \"keyAsString\",\n                        \"isDescending\": \"true\",\n                        \"minimumCount\": 0\n                    }\n                }\n            ]\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Trim duplicated SharePoint search results",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "09819ca8-1936-45cd-92db-5f877d5426e4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read.All, Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-30f8f941-f6bf-410b-944a-9030422c3100",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\"\n            },\n            \"trimDuplicate\": true\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search with queryTemplate",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a3e285ce-98b3-41f6-957d-2d4873fccb7d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read.All, Sites.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-d3eb92f7-3ee0-4a49-a08f-637cd59253ee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"requests\": [\n        {\n            \"entityTypes\": [\n                \"driveItem\"\n            ],\n            \"query\": {\n                \"queryString\": \"contoso\",\n                \"queryTemplate\": \"({searchTerms})\"\n            }\n        }\n    ]\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search with basic collapse",
							"id": "29708525-ee6179e3-366f-4fad-952a-67b2a02e22e6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"listItem\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"test\"\r\n            },\r\n            \"fields\": [\r\n                \"title\"\r\n            ],\r\n            \"collapseProperties\": [\r\n                {\r\n                    \"fields\": [\r\n                        \"title\"\r\n                    ],\r\n                    \"limit\": 3\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search with compound collapse",
							"id": "29708525-a1e71b24-4154-40e8-b647-85e809abc5fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"listItem\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"cat\"\r\n            },\r\n            \"fields\": [\r\n                \"title\",\r\n                \"createdBy\"\r\n            ],\r\n            \"collapseProperties\": [\r\n                {\r\n                    \"fields\": [\r\n                        \"title\",\r\n                        \"createdBy\"\r\n                    ],\r\n                    \"limit\": 3\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search with multi-level collapse",
							"id": "29708525-e48e4e56-44f1-4a48-913b-c6796a629b4c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"listItem\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"cat\"\r\n            },\r\n            \"fields\": [\r\n                \"title\",\r\n                \"createdBy\"\r\n            ],\r\n            \"collapseProperties\": [\r\n                {\r\n                    \"fields\": [\r\n                        \"title\"\r\n                    ],\r\n                    \"limit\": 3\r\n                },\r\n                {\r\n                    \"fields\": [\r\n                        \"createdBy\"\r\n                    ],\r\n                    \"limit\": 2\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search driveItem with fields",
							"id": "29708525-6fd2d199-e3fc-4a11-9b37-3d465bff70ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"requests\": [\r\n        {\r\n            \"entityTypes\": [\r\n                \"driveItem\"\r\n            ],\r\n            \"query\": {\r\n                \"queryString\": \"issue\"\r\n            },\r\n            \"fields\": [\r\n                \"listId\",\r\n                \"author\",\r\n                \"title\"\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/search/query",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"search",
										"query"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-9d848e69-1dc1-4944-8f7d-997da8ed64d1"
				},
				{
					"name": "Tasks - Planner",
					"item": [
						{
							"name": "Get Planner tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "01669859-9bf6-4b90-b6c4-234f01283915",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-af70f7d9-43f4-4de4-8f76-c27fcf69e926",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/planner/tasks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"planner",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Planner tasks for a user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "33c6d769-2621-4cbd-a36a-77b046c71bd2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-edd213f3-aa6a-4d1e-a9e6-1296a7045221",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserName}}/planner/tasks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserName}}",
										"planner",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Planner plans associated with group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "12856264-c04b-487b-869f-8c839c48d02f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanId\", json[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c52c7f1c-8fb5-4171-8548-a51484f2884b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}/planner/plans",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"groups",
										"{{GroupId}}",
										"planner",
										"plans"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08b1feaa-072b-4117-a18f-8d5f8a0667a4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c2939cfa-6735-4015-a29b-ded8411d9ff3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"plans",
										"{{PlanId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb5dfbd4-9718-413d-ac39-1c6dd1119c5b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-67332c5a-0a96-4034-af01-3ede7352264f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"value": "{{PlanETag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated plan title\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"plans",
										"{{PlanId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get plan buckets",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c037f504-9011-4100-9a26-73ffcdf7a1b8",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-0ee14335-6dfe-43e8-8cbf-636d13e60da5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}/buckets",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"plans",
										"{{PlanId}}",
										"buckets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a bucket in a plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ac282c1f-55e7-4147-b5a4-e65bf2bfc92f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"BucketId\", json.id);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8583c522-2420-46ad-9f30-d1e257731ab7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{PlanETag}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New bucket\",\n  \"planId\": \"{{PlanId}}\",\n  \"orderHint\": \" !\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/buckets",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"buckets"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a bucket",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4b6dfed1-132c-4f6f-b2f1-f5c674767d57",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-924f0293-b971-4950-8a07-b24ff3cf28bc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"type": "text",
										"value": "{{PlanETag}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"Updated bucket name\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/buckets/{{BucketId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"buckets",
										"{{BucketId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Planner tasks for a plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb40f5ab-bcbb-4e68-be4d-3d8277c254bd",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TasksId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ba05854e-9122-481f-a0d3-8cad9708f52f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/plans/{{PlanId}}/tasks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"plans",
										"{{PlanId}}",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Planner task by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dfb67bc8-6309-4cbc-9d83-c9350eb3cf56",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-24cb0b2d-172e-4df0-9488-f4dd262efcfb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/tasks/{{TaskId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"tasks",
										"{{TaskId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a Planner task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "df3c982a-57dc-494c-966f-463e05a1a808",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-74cb0788-1731-43d1-b77d-2f21da2064ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"planId\": \"{{PlanId}}\",\n  \"title\": \"New Task\",\n  \"assignments\": {}\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/tasks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a Planner task",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4c16a35c-3180-4798-908e-d4ce5b490922",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-0def31a6-8f7b-457a-8f2b-5c96b01d17d7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "If-Match",
										"value": "{{PlanETag}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"Updated task title\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/tasks/{{TaskId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"tasks",
										"{{TaskId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Planner task details",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6e4c2409-4e7c-48cb-a38a-998b9a681c2b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"PlanETag\", json[\"@odata.etag\"]);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-40a98caa-6d7c-4a3b-820d-621f47de8764",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/planner/tasks/{{TaskId}}/details",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"planner",
										"tasks",
										"{{TaskId}}",
										"details"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-249cbdb2-9498-4763-aafb-e57d68c67079"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Get my profile",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "316d041d-5344-4e2f-8597-fa35a14efdcc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-336a3bee-afab-4841-a2b4-2f15dcb1a2fc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my about me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "019e8e49-e26d-4109-8cb5-8533763fb777",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-9c36ca6e-3fb9-48df-9d18-f2c119798759",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/aboutMe",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"aboutMe"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my skills",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3fb4c829-9cbe-446d-bbac-febb9e7cf8f8",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-21eaf45e-e253-4153-b7f2-e9f5bbe4f019",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/?$select=displayName,skills",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										""
									],
									"query": [
										{
											"key": "$select",
											"value": "displayName,skills"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my manager",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "cb7f8336-19ab-496e-bd5e-887685d6f7bc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ffc45251-6f25-4f8d-bda2-679b32a61131",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/manager",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"manager"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my direct reports",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c86f5ad9-21b0-4d94-85ef-7435a0939e3e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-bd1cbfb1-19c9-4592-aad4-2b23b403878d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/directReports",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"directReports"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my groups",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3544031f-54ba-47f2-a8eb-f318e9055dce",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Directory.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8879954d-c5aa-40d1-9529-b267c6beb936",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/memberOf",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"memberOf"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my photo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d62dd9f8-a702-4a84-8b2c-289b753d7b2d",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-cdf56a9b-cfed-4c5c-aa5b-4517adffd5fd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/photo/$value",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"photo",
										"$value"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3a8efa71-bcd6-4f36-92a4-085c85ee8a33",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least User.Read.All in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-e6102946-6d00-44e8-84b1-b0b533e93f34",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get users $filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3df98726-f82c-4228-9169-edaa6d63529f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least User.Read.All in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a5122e0b-75df-45a0-90e7-162e839ea248",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users?$filter=Department eq 'Finance'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users"
									],
									"query": [
										{
											"key": "$filter",
											"value": "Department eq 'Finance'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get user's profile by email",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a00e12e-1009-47ab-9f63-c5dbfedf8edb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least User.Read.All in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f28433af-6150-4888-bb23-fafa350e3493",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserName}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserName}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a user's profile by id",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "43116ae5-01a1-4af5-b8d4-651839dec359",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a1ea0e70-c1a8-47ea-a1f4-afc579762a8b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a user's photo",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "08be81af-b481-44ef-a3e9-93568bd1667c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ca958de3-b0f1-4558-a875-2ff358c0c7bd",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserId}}/photo/$value",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserId}}",
										"photo",
										"$value"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite a guest user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "23626358-46c2-413f-9a19-aa679fc590d7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *User.Invite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get invited user id\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.invitedUser.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-e8dad2e1-b446-4f45-8791-cd5fb570a58e",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"invitedUserDisplayName\": \"<Display Name of Invited User>\", \r\n    \"invitedUserEmailAddress\": \"<Email Address of Invited User>\", \r\n    \"invitedUserMessageInfo\": {\r\n        \"messageLanguage\": \"en-US\",\r\n        \"ccRecipients\": [\r\n             {\r\n                \"emailAddress\": {\r\n                    \"name\": \"<Optional CC for Invitation>\",\r\n                    \"address\": \"<Optional CC Email Address for Invitation>\"\r\n                 }\r\n             }\r\n        ],\r\n        \"customizedMessageBody\": \"Hi, you have just been invited to Azure AD with Postman using Microsoft Graph!\"\r\n     },\r\n    \"sendInvitationMessage\": true, \r\n    \"inviteRedirectUrl\": \"https://myapps.microsoft.com\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/invitations",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"invitations"
									]
								},
								"description": "Invite Azure AD B2B Guest User using Delegated Permission"
							},
							"response": []
						}
					],
					"id": "29708525-cc72dd21-df4d-495f-9199-956b6fed06ef"
				},
				{
					"name": "Files",
					"item": [
						{
							"name": "Get my files",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7c922339-0cf1-49b8-9000-f98c21a34ed4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f5310713-d9e0-47b0-9580-d036ad92b445",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/drive/root/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"drive",
										"root",
										"children"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my recent files",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "555613ab-75d6-49e9-837d-5326473cf05c",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a01a2ba6-0e87-4a0c-8fa1-a5aa0e24f2e9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/drive/recent",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"drive",
										"recent"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get files shared with me",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f1d41471-0847-4b0c-a7e5-61bec9bec4e7",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8f5640db-5cc2-404d-9145-9823917b14a2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/drive/sharedWithMe",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"drive",
										"sharedWithMe"
									]
								}
							},
							"response": []
						},
						{
							"name": "Search my OneDrive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5d4aa299-86db-4c0b-8611-4cf12fd85041",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1bcf466f-94b1-4cad-be45-73a40adfa55c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/drive/root/search(q='finance')?select=name,id,webUrl",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"drive",
										"root",
										"search(q='finance')"
									],
									"query": [
										{
											"key": "select",
											"value": "name,id,webUrl"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a folder",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c4d8cfc6-8dac-4069-984c-460f3acc9d2a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Files.ReadWrite* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c18dc44f-ce50-4010-90a9-e925477112ea",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"New Folder\",\n  \"folder\": {}\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/drive/root/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"drive",
										"root",
										"children"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-77735ccc-066d-473a-a48e-b49fb6c203cc"
				},
				{
					"name": "Tasks - Todo",
					"item": [
						{
							"name": "Get my To Do lists",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "bb78b625-6a32-4eaf-ab05-7e41a381e18a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-821d0da0-aafd-4079-b1f2-31d3781fcab3",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3f38a1c5-9190-4a9a-b8c9-efa19f3845a2",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-b1bb4941-e497-4e7b-92e1-41711f9a5707",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d135f780-a1d8-413d-b6af-b9930014c3db",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-767b6be0-456a-4286-962e-b0a4db280188",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"displayName\": \"Postman created list\"\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e3a553bc-fbc2-4229-ac81-ef81e5322537",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-2bbffce3-511b-4e59-989e-9af3b5378178",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"displayName\": \"Postman created items\"\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a To Do list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "47a2878a-ce79-450a-8a02-4c50ae3081f4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskListId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ed89356f-8d87-48c7-91b2-a49f00285945",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get my To Do list tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b0de378-5a26-47a8-b762-32b96b0d63ac",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-0e6fdbf9-e8a8-4b82-8a22-ac3e10fd98ae",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a To Do task in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e61930e7-12b8-4952-be76-98d968c056c9",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TaskId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-800a4c9e-9bf3-4639-8270-ebf6aff444c8",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"title\":\"Postman created Task\",\r\n   \"linkedResources\":[\r\n      {\r\n         \"webUrl\":\"http://microsoft.com\",\r\n         \"applicationName\":\"Microsoft\",\r\n         \"displayName\":\"Microsoft\"\r\n      }\r\n   ]\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update a To Do task in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2f0383a7-53a1-4969-b967-0f8f89dd0dba",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1e4962b8-3b4f-4836-a7d8-9a847f667d23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"dueDateTime\":{\r\n      \"dateTime\":\"2021-04-19T00:00:00\",\r\n      \"timeZone\":\"Eastern Standard Time\"\r\n   }\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks/{{TaskId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}",
										"tasks",
										"{{TaskId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete a To Do task in a list",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d33cafec-fabc-42a0-9baf-a9d578f02c29",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Tasks.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            postman.setEnvironmentVariable(\"TaskId\", \"\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c2d177f4-50bc-4379-afd3-a4bc5bbe6c77",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/todo/lists/{{TaskListId}}/tasks/{{TaskId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"todo",
										"lists",
										"{{TaskListId}}",
										"tasks",
										"{{TaskId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-caca0154-15b5-4445-b6bf-d850d0788c1e"
				},
				{
					"name": "Teams",
					"item": [
						{
							"name": "Get my joined teams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7ed3ebbc-bd46-4ed9-be74-540b8b44d6fb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-aa6c9f76-c4c2-4020-a455-a0b91701efbe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/joinedTeams",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"joinedTeams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get members of a team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "c66fe031-5f30-47fd-bd8e-cbce1b692a0b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-85a91063-7f84-46be-852f-48b926f70c23",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/groups/{{TeamId}}/members",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"groups",
										"{{TeamId}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get channels of a team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "3ba4238b-f87b-4b5b-b33f-2a2500b1c97a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ChannelId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f8571bff-80eb-4315-b690-baca8fca29ec",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"channels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get channel info",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5eeb7d80-7b3e-44f4-baab-004880a03b5f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-1a7800fe-3894-489a-83ec-e9cdeda3ee60",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "19e2f667-c6b3-4c38-afa8-25d34d3a9181",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            location = pm.response.headers.get(\"Location\");\r",
											"            var patt = /[a-f0-9]{8}(?:-[a-f0-9]{4}){3}-[a-f0-9]{12}/i;\r",
											"            var result = location.match(patt);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", result);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-e1e61d02-6925-45fb-9d38-e0468df0a07c",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"template@odata.bind\": \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n  \"displayName\": \"My Sample Team\",\n  \"description\": \"My Sample Team’s Description\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8ea50b57-79de-427b-8605-65ac890c6bb1",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ChannelId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-be97b549-b90f-4961-87d4-f51556008413",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"displayName\": \"Architecture Discussion\",\n  \"description\": \"This channel is where we debate all future architecture plans\"\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"channels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get apps in a team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2d5f5e75-506c-45b5-abcb-25862b3e94b5",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"AppId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-44ff1346-ff37-41b6-90ef-2362276b8518",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/installedApps?$expand=teamsAppDefinition",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"installedApps"
									],
									"query": [
										{
											"key": "$expand",
											"value": "teamsAppDefinition"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get tabs in a channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "5a440747-6a9e-48e5-97c1-25b3a4483cdc",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-79723d1c-8f7e-4f8f-8cb4-3c71cf29e2ac",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}/tabs?$expand=teamsApp",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"tabs"
									],
									"query": [
										{
											"key": "$expand",
											"value": "teamsApp"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get items in a team drive",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4fdecb6b-acd8-4df2-9246-5e325fa0e9f3",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c9e37a41-1d30-40cd-a6b1-889495fd7df0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/groups/{{TeamId}}/drive/root/children",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"groups",
										"{{TeamId}}",
										"drive",
										"root",
										"children"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get messages (without replies) in a channel (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "ab387bba-2461-458d-a436-f8e8e4ce479a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a71c6300-19ab-4d94-b270-b46b68bf49f9",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a message in a channel (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1fb07ea-208b-4c40-b7d1-5047375c08b3",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8c666898-fd76-481d-9455-6ced6530e2e1",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages/{{MessageId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"messages",
										"{{MessageId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get replies to a message in a channel (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b1b02c22-f7ac-4ab7-be23-93923a16acdb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"ReplyId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-a6264c3c-cdeb-42d9-af6b-0afac3ad83e4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages/{{MessageId}}/replies",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"messages",
										"{{MessageId}}",
										"replies"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a reply of a message (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4a647bf1-47e7-40da-9ad0-36f5d4895614",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.Read.All* AND *User.Read.All*  in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-ab6d1576-d5c1-4281-87cf-86c5e8878bbe",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages/{{MessageId}}/replies/{{ReplyId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"messages",
										"{{MessageId}}",
										"replies",
										"{{ReplyId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create a plain text chat thread (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f2a408ea-ecbb-480e-ad5c-370ef13bf7c4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-13dceaff-bddb-411e-af72-d26caf7537c5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": {\n    \"content\": \"Hello World!\"\n  }\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create an HTML chat thread (beta)",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b2f0abf5-20ed-4f61-bb69-4ae319de708f",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *Group.ReadWrite.All* AND *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"MessageId\", json.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-e6420654-6c50-4147-91d7-3688f1088883",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"body\": {\n    \"contentType\": \"html\",\n    \"content\": \"<div><div>\\n<div><img alt=\\\"GIF Image\\\" height=\\\"250\\\" src=\\\"https://media3.giphy.com/media/f5xmRWRu4zxxh2mE5v/giphy.gif?cid=de9bf95eevnce0lknjlbneccchvdkn991jea1gtmw2zmvdke&amp;rid=giphy.gif\\\" width=\\\"250\\\" style=\\\"max-height:250px; width:250px; height:250px\\\"></div>\\n\\n\\n</div>\\n</div>\"\n  }\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/teams/{{TeamId}}/channels/{{ChannelId}}/messages",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"messages"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-edf57683-485d-4766-94e3-334d5ad4c0ca"
				},
				{
					"name": "People",
					"item": [
						{
							"name": "Get people",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "b12afe36-a282-4ba2-8cfc-8c9eb1f46e65",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-12ddbbab-0c1f-4f06-a13c-8ccddb66c7c0",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $top $skip",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f6d1ebcd-7894-40a4-9707-7301946d4cc3",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-6d751dcf-e4fa-4bcb-a676-3eeac875c112",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people?$top=10&$skip=10",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people"
									],
									"query": [
										{
											"key": "$top",
											"value": "10"
										},
										{
											"key": "$skip",
											"value": "10"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $orderby",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8bc9aa02-8883-44a1-b9c4-dcdad6f9faa4",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-3da817d3-5b13-49b2-9396-2e32505b94d4",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$orderby=DisplayName",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$orderby",
											"value": "DisplayName"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $filter",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "81d217a3-54c5-445e-95ef-668e770c57d5",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8be8245b-b43f-48b9-911f-34560b8bccaf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$select=DisplayName,scoredEmailAddresses&$filter=DisplayName eq 'New Hires'",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$select",
											"value": "DisplayName,scoredEmailAddresses"
										},
										{
											"key": "$filter",
											"value": "DisplayName eq 'New Hires'"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $search",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1b63df2c-6f96-41ce-b536-05ea25bd6a69",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-bf74c672-d6da-4eaf-9a42-0fc7a5e0d2cf",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$search=j",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$search",
											"value": "j"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $search topic",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "1277dfb6-ebd2-4ca4-b807-d9a22d435d11",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-4edb7feb-9ec9-4976-ab6a-eeeeeebcb9e5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$search=\"ma topic: feature planning\"",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$search",
											"value": "\"ma topic: feature planning\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get people $search fuzzy",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "f30e7969-4328-4574-ac7e-f92add12380a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-4ff9e9d6-f4be-44f9-b7fd-6c02df29c8b5",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/me/people/?$search=\"John\"",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"me",
										"people",
										""
									],
									"query": [
										{
											"key": "$search",
											"value": "\"John\""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a user's related people",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "e2a4dcb0-064f-48c2-a005-4f441a265040",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add user delegated permissions in your application to at least *People.Read* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Delegated folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-046ab699-3bea-4bcf-8532-12defe0f2550",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users('{{UserName}}')/people/",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users('{{UserName}}')",
										"people",
										""
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-f56905eb-7e6d-45ff-a336-c581c5fac40d"
				}
			],
			"id": "29708525-f72d5121-41c5-41bb-ac4c-224fb681e3eb",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "redirect_uri",
						"value": "https://oauth.pstmn.io/v1/browser-callback",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "https://graph.microsoft.com/.default",
						"type": "string"
					},
					{
						"key": "state",
						"value": "12345",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": false,
						"type": "boolean"
					},
					{
						"key": "tokenType",
						"value": "",
						"type": "string"
					},
					{
						"key": "accessToken",
						"value": "",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "authorization_code",
						"type": "string"
					},
					{
						"key": "tokenName",
						"value": "Delegated Token",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{ClientSecret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{ClientID}}",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/authorize",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "46e128d8-770e-4d9e-8ed1-4e497db5de4b",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "ea7b1792-2ca4-46b9-98d7-8b59d8f144c1",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Application",
			"item": [
				{
					"name": "Graph Connectors",
					"item": [
						{
							"name": "Connection setup",
							"item": [
								{
									"name": "Manage experience settings (beta)",
									"item": [
										{
											"name": "Add activity settings",
											"id": "29708525-c552296d-7ee3-45b4-9129-1fbcfe01b04a",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n     \"activitySettings\": {\r\n        \"urlToItemResolvers\": [\r\n            {\r\n                \"priority\": 1,\r\n                \"urlMatchInfo\": {\r\n                    \"baseUrls\": [\r\n                        \"https: //www.contoso.com/files\"\r\n                    ],\r\n                    \"urlPattern\": \"/file/(?<fileid>[a-zA-Z0-9]+)\"\r\n                },\r\n                \"itemId\": \"{fileid}\"\r\n            }\r\n        ]\r\n    }\r\n}"
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/external/connections/sampleConnectionId",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"external",
														"connections",
														"sampleConnectionId"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add search settings",
											"id": "29708525-befedb8b-f60c-4643-8ebc-60c4dc7ac411",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"searchSettings\": {\r\n        \"searchResultTemplates\": [\r\n            {\r\n                \"id\": \"graphApiMrt01\",\r\n                \"layout\": {\r\n                    \"type\": \"AdaptiveCard\",\r\n                    \"version\": \"1.2\",\r\n                    \"$schema\": \"http://adaptivecards.io/schemas/adaptive-card.json\",\r\n                    \"body\": [\r\n                        {\r\n                            \"type\": \"TextBlock\",\r\n                            \"text\": \"[${title}](${url})\"\r\n                        }\r\n                    ]\r\n                },\r\n                \"priority\": 10000\r\n            }\r\n        ]\r\n    }\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/external/connections/sampleConnectionId",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"external",
														"connections",
														"sampleConnectionId"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-8c3a122b-11a3-49a0-8c13-254deef86f84"
								},
								{
									"name": "Manage schema",
									"item": [
										{
											"name": "Get schema",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "a4d22484-8680-40e4-83fc-13163a4f5720",
														"exec": [
															""
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-062a46ba-f24f-4c22-ab7a-7d477c835c01",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/schema",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"external",
														"connections",
														"sampleConnectionId",
														"schema"
													]
												}
											},
											"response": []
										},
										{
											"name": "Register schema",
											"event": [
												{
													"listen": "test",
													"script": {
														"id": "e86dbf92-ebc9-4493-b2ba-0e90c98a9151",
														"exec": [
															"postman.setEnvironmentVariable(\"OperationUrl\", pm.response.headers.get(\"Location\"));"
														],
														"type": "text/javascript"
													}
												}
											],
											"id": "29708525-864560e5-816d-4ddd-a400-f9d9069eb2d0",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"name": "Content-Type",
														"type": "text",
														"value": "application/json"
													},
													{
														"key": "prefer",
														"type": "text",
														"value": "respond-async"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"baseType\": \"microsoft.graph.externalItem\",\r\n    \"properties\": [\r\n        {\r\n            \"name\": \"id\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"title\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": true,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"title\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"extension\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": true,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"createdBy\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": true,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"createdBy\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"createdDateTime\",\r\n            \"type\": \"dateTime\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"createdDateTime\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"lastModifiedBy\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"lastModifiedDate\",\r\n            \"type\": \"dateTime\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": true,\r\n            \"labels\": [\r\n                \"lastModifiedDateTime\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"url\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [\r\n                \"url\"\r\n            ],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"description\",\r\n            \"type\": \"string\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [],\r\n            \"aliases\": []\r\n        },\r\n        {\r\n            \"name\": \"authors\",\r\n            \"type\": \"stringCollection\",\r\n            \"isSearchable\": false,\r\n            \"isRetrievable\": true,\r\n            \"isQueryable\": false,\r\n            \"labels\": [\r\n                \"authors\"\r\n            ],\r\n            \"aliases\": []\r\n        }\r\n    ]\r\n}"
												},
												"url": {
													"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/schema",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"v1.0",
														"external",
														"connections",
														"sampleConnectionId",
														"schema"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-7fcedbca-77b7-4bfd-8ad5-7b55e1e53430"
								},
								{
									"name": "Get all connections",
									"id": "29708525-7eca9fc1-fa0f-4d3f-967d-3c3eedb99a6a",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Prefer",
												"value": "include-unknown-enum-members",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get connection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0fdf4e57-3714-46e5-b372-2d6009b9f09d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-c52074d3-07e8-41c3-908c-fe798be11a60",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Prefer",
												"value": "include-unknown-enum-members",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId"
											]
										}
									},
									"response": []
								},
								{
									"name": "Create connection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "9b3e7a41-f695-4079-b847-7788d7284be4",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-f39b3a2d-7520-4e4f-bb80-212041bdaef4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"id\": \"sampleConnectionId\",\r\n    \"name\": \"Sample connection\",\r\n    \"description\": \"Sample connection description\"\r\n}"
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete connection",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "6e814f1c-6389-4154-a94c-625cbc52982f",
												"exec": [
													"postman.setEnvironmentVariable(\"OperationUrl\", pm.response.headers.get(\"Location\"));"
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-5e38daf9-cc6a-4e47-ac54-f66d7322aab4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get operation status",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "0fdf4e57-3714-46e5-b372-2d6009b9f09d",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-3c79c9c6-e670-4840-93a9-bd0d947111bd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/operations/7a49501d-f8a8-f06f-7435-07fffcb45fbc",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"operations",
												"7a49501d-f8a8-f06f-7435-07fffcb45fbc"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-c2daf47e-baf5-4cf6-853c-c381f699b542"
						},
						{
							"name": "Content sync",
							"item": [
								{
									"name": "Manage item activities (beta)",
									"item": [
										{
											"name": "Add activity",
											"id": "29708525-207a50f4-7a8b-4ce9-9614-1601f686c69b",
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"activities\": [\r\n        {\r\n            \"type\": \"viewed\",\r\n            \"startDateTime\": \"2021-04-13T06:37:12.6402005Z\",\r\n            \"performedBy\": {\r\n                \"id\": \"7a49501d-f8a8-f06f-7435-07fffcb45fbc\",\r\n                \"type\": \"user\"\r\n            }\r\n        },\r\n        {\r\n            \"type\": \"modified\",\r\n            \"startDateTime\": \"2021-04-13T06:37:12.6402005Z\",\r\n            \"performedBy\": {\r\n                \"id\": \"efd46234-a7ef-4c38-818e-79b692995ec1\",\r\n                \"type\": \"user\"\r\n            }\r\n        }\r\n    ]\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "https://graph.microsoft.com/beta/external/connections/sampleConnectionId/items/sampleItemId/addActivities",
													"protocol": "https",
													"host": [
														"graph",
														"microsoft",
														"com"
													],
													"path": [
														"beta",
														"external",
														"connections",
														"sampleConnectionId",
														"items",
														"sampleItemId",
														"addActivities"
													]
												}
											},
											"response": []
										}
									],
									"id": "29708525-0cfb3680-2cba-4f83-9b2e-a6ae4dc26603"
								},
								{
									"name": "Get item",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "2c967738-ff5a-4a27-9a83-61b67c123a7e",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-b83e6770-fbda-40a2-abe5-652634139d13",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Prefer",
												"value": "include-unknown-enum-members",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/items/sampleItemId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"items",
												"sampleItemId"
											]
										}
									},
									"response": []
								},
								{
									"name": "Put item",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "18237dae-ee3e-464f-9a63-f9462c2ac455",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-0950a301-54cb-4c08-8e65-a1bc93e39122",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"acl\": [\r\n        {\r\n            \"type\": \"everyone\",\r\n            \"value\": \"c5f19b2d-0a77-454a-9b43-abf298c3b34e\",\r\n            \"accessType\": \"grant\"\r\n        }\r\n    ],\r\n    \"properties\": {\r\n        \"title\": \"Sample item title\",\r\n        \"extension\": \"docx\",\r\n        \"createdBy\": \"John Doe\",\r\n        \"createdDateTime\": \"2021-04-27T11:04:00Z\",\r\n        \"iconUrl\": \"https://contentdepot.blob.core.windows.net/filedepot/sampleIconUrl.png\",\r\n        \"authors\": [\r\n            \"John Doe\"\r\n        ],\r\n        \"authors@odata.type\": \"Collection(String)\",\r\n        \"lastModifiedDate\": \"2021-04-27T11:04:00Z\",\r\n        \"url\": \"https://sampleItemUrl.com\",\r\n        \"containerName\": \"Sample container name\",\r\n        \"containerUrl\": \"https://sampleContainerUrl.com\"\r\n    },\r\n    \"content\": {\r\n        \"type\": \"text\",\r\n        \"value\": \"Empower customers and partners to be more productive by enabling them to bring content and activity information and allow external content to participate in Microsoft Search and OfficeHub experiences so that they find relevant and actionable information across all their applications.\"\r\n    }\r\n}"
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/items/sampleItemId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"items",
												"sampleItemId"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete item",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "dc532bf5-9309-4b9d-8e17-694d4e849228",
												"exec": [
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-9cf56aec-877d-4a26-9a9e-407176699ad4",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"type": "text",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": ""
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/items/sampleItemId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"items",
												"sampleItemId"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-a981e934-9744-4964-b8fa-4c81137b18f3",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										],
										"id": "524131fe-6189-40b8-8b3b-0f0e915bb77b"
									}
								},
								{
									"listen": "test",
									"script": {
										"type": "text/javascript",
										"exec": [
											""
										],
										"id": "b9d8ee9d-ae68-4957-8823-025cdbe0b904"
									}
								}
							]
						},
						{
							"name": "Identity Sync",
							"item": [
								{
									"name": "Get group",
									"id": "29708525-37fca6db-068b-4b4f-a9b4-c9a7fcca598e",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Prefer",
												"value": "include-unknown-enum-members",
												"disabled": true
											}
										],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups",
												"graphConnectorGroupId"
											]
										},
										"description": "Get a previously created group under the connection."
									},
									"response": []
								},
								{
									"name": "Create group",
									"id": "29708525-3ddb312e-00e4-4aa0-9880-46c531345a0d",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"graphConnectorGroupId\",\r\n   \"displayName\":\"Display name of group sampleExternalGroupId\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups"
											]
										},
										"description": "Create group under the connection"
									},
									"response": []
								},
								{
									"name": "Add AAD user as member",
									"id": "29708525-b663bb53-4761-49b0-9f67-4a1cad255a53",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"e42f427c-f33f-4389-afd8-db432ff6a338\",\r\n   \"type\":\"user\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups",
												"graphConnectorGroupId",
												"members",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Add AAD group as member",
									"id": "29708525-61cb0170-fc65-4542-a0ba-a660d7d02d08",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"e42f427c-f33f-4389-afd8-db432ff6a338\",\r\n   \"type\":\"group\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups",
												"graphConnectorGroupId",
												"members",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Add connector group as member",
									"id": "29708525-de47608f-7bef-4757-86c0-b7e37161ab41",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n   \"id\":\"childGraphConnectorGroupId\",\r\n   \"type\":\"externalGroup\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups",
												"graphConnectorGroupId",
												"members",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove member",
									"id": "29708525-97456c08-15b5-4ccb-b60b-2908f8f2731b",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId/members/childGraphConnectorGroupId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups",
												"graphConnectorGroupId",
												"members",
												"childGraphConnectorGroupId"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete group",
									"id": "29708525-b6665a09-9097-48a9-8123-71a087249453",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/external/connections/sampleConnectionId/groups/graphConnectorGroupId",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"external",
												"connections",
												"sampleConnectionId",
												"groups",
												"graphConnectorGroupId"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-c9bf292c-01e1-432d-89ab-0447f9cf5375"
						}
					],
					"id": "29708525-056c2a83-4a96-47c4-a8d6-f2bde6d0eea9",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7a3adf66-4160-4580-8db0-6e8acda91dc9",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ef170f43-8ed8-4cdd-a9d7-159051115832",
								"type": "text/javascript",
								"exec": [
									""
								]
							}
						}
					]
				},
				{
					"name": "Mail",
					"item": [
						{
							"name": "Get a user's messages",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "53aa3a9f-f227-42a8-b712-67d7a9f51f62",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add application permissions in your application to at least *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > click on Get New Access Token button.\");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f84f54b6-71b8-4235-a9b4-63a605d6a29b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserId}}/messages",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserId}}",
										"messages"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a user's message",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "56cef622-b65c-4d1d-87a7-78bdf149c404",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.environment.get(\"MessageId\") === \"\")\r",
											"            {\r",
											"                console.log(\"You need to run *Application | Mail | Get a users messages* request first or set a MessageId environment variable.\");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (pm.response.status === \"Forbidden\")\r",
											"                {\r",
											"                    console.log(\"You need to add application permissions in your application to at least *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-0da81d50-bec1-4882-a017-70861a00dfb7",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserId}}/messages/{{MessageId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserId}}",
										"messages",
										"{{MessageId}}"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-bfc6241e-6f1d-4209-a215-05d59a548237"
				},
				{
					"name": "SharePoint",
					"item": [
						{
							"name": "Get sites",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "dc291a39-03f8-4ce1-a1e4-318bfd125984",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add application permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c73bb063-1792-450d-9759-100fdcadb436",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									},
									{
										"key": "Prefer",
										"value": "apiversion=2.1",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get drives",
							"id": "29708525-1f329067-2be1-43e9-abe1-82c0a5301b9f",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/sites/{{SiteID}}/drives",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"sites",
										"{{SiteID}}",
										"drives"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-bf07580c-7f8e-4883-abf5-569af24f3b4a"
				},
				{
					"name": "Subscriptions",
					"item": [
						{
							"name": "Get subscriptions",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "4998c251-2688-4b3d-b865-9c9446e8eb61",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add application permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-8e3dd776-3ca7-4c29-be6f-530fe04af74b",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"type": "text",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/subscriptions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"subscriptions"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "92fa0f7a-accf-4638-a4a6-2418989b0f47",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add application permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-208ea82d-a02a-4350-a0b1-fadb75e8f5bb",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \"expirationDateTime\":\"2019-05-19T12:41:53.2962802Z\"\r\n}"
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/subscriptions/{{SubscriptionId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"subscriptions",
										"{{SubscriptionId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create subscription",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "7cfbd217-6593-4602-9e89-6e5cdb798166",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.environment.get(\"UserId\") === \"\")\r",
											"        {\r",
											"            console.log(\"You need to run *Application | Get Users* request first or set a UserId environment variable.\");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            if (pm.response.status === \"Forbidden\")\r",
											"            {\r",
											"                console.log(\"You need to add application permissions in your application to atleast *Mail.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"            }\r",
											"            else\r",
											"            {\r",
											"                if (responseBody.indexOf(\"ResourceNotFound\") !== -1)\r",
											"                {\r",
											"                    console.log(\"You need to pick a UserId who has a license for a mailbox.\");\r",
											"                }\r",
											"                else\r",
											"                {\r",
											"                    var json = JSON.parse(responseBody);\r",
											"                    postman.setEnvironmentVariable(\"MessageId\", json.value[0].id);\r",
											"                }\r",
											"            }\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f7893f4c-6516-4ac9-b203-54013257144a",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"changeType\": \"created,updated\",\r\n  \"notificationUrl\": \"{{notificationUrl}}\",\r\n  \"resource\": \"{{resourcePath}}\",\r\n  \"expirationDateTime\": \"{{expirationDateTime}}\",\r\n  \"clientState\": \"secretClientState\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/beta/subscriptions",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"subscriptions"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-dcd4d590-0842-43e6-99e0-0533ab87a642"
				},
				{
					"name": "Teams",
					"item": [
						{
							"name": "Memberships",
							"item": [
								{
									"name": "Get team members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "af99d864-d6dd-4d9f-b550-9728cdaa2461",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-be518b0a-0147-4b28-b3bf-7036450701ad",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{GroupId}}",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get single team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "ecaabb7d-d49f-4050-a89a-c7327e302e88",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-700bd8b8-0442-4656-9c70-5a85acf2a204",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members/{{UserId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{GroupId}}",
												"members",
												"{{UserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get channel members",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "c7f271e9-2103-45d2-af7e-cb5b2616d4e8",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-8d8deffd-4dd9-49dc-adf5-b034867cd0dd",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/channels/{{ChannelId}}/members",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{GroupId}}",
												"channels",
												"{{ChannelId}}",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add channel member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "195d57f5-9a15-43ff-b069-45c90fa9e523",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-b925a28e-8353-4289-86b3-d4ac2b012cf0",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n    \"roles\": [\"owner\"],\r\n    \"user@odata.bind\": \"https://graph.microsoft.com/v1.0/users/8b081ef6-4792-4def-b2c9-c363a1bf41d5\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}/members",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{TeamId}}",
												"channels",
												"{{ChannelId}}",
												"members"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "f60364cf-4edd-4c2e-8290-0cf18d675b52",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-828e1e74-8aff-4270-a3f2-382ba741e9c6",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/members/{{UserId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{TeamId}}",
												"members",
												"{{UserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Remove channel member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "cbc98b3f-ba0e-4157-b0b2-124a18bd13a2",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-8d5bd581-0ea3-4c12-a14e-90d57eb7b7a4",
									"protocolProfileBehavior": {
										"disabledSystemHeaders": {},
										"disableBodyPruning": true
									},
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}members/{{UserId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{TeamId}}",
												"channels",
												"{{ChannelId}}members",
												"{{UserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "a3becd6d-7fd0-4091-aeb1-009e0acabb78",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-eef7d718-f3ed-48c5-b0ec-8caae57a1f5c",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@odata.type\":\"#microsoft.graph.aadUserConversationMember\",\r\n  \"roles\": [\"owner\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members/{{UserId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{GroupId}}",
												"members",
												"{{UserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Update channel member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "690a2790-8c1d-4f93-b1e9-0720216e8d03",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-ee9e0f17-5396-4697-9d84-c7dd1a9c411f",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"@odata.type\":\"#microsoft.graph.aadUserConversationMember\",\r\n  \"roles\": [\"owner\"]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/channels/{{ChannelId}}/members/{{UserId}}",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{GroupId}}",
												"channels",
												"{{ChannelId}}",
												"members",
												"{{UserId}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add team member",
									"event": [
										{
											"listen": "test",
											"script": {
												"id": "85e2eaa2-420f-4c18-94ad-7bf8d2c7d31f",
												"exec": [
													"try {\r",
													"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
													"    {\r",
													"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
													"    }\r",
													"    else\r",
													"    {\r",
													"        if (pm.response.status === \"Forbidden\")\r",
													"        {\r",
													"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
													"        }\r",
													"        else\r",
													"        {\r",
													"            var json = JSON.parse(responseBody);\r",
													"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
													"        }\r",
													"    }\r",
													"}\r",
													"catch (e) {\r",
													"    console.log(e);\r",
													"}\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"id": "29708525-f63bd100-8ab4-482b-8f49-d309168de0b8",
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"@odata.type\": \"#microsoft.graph.aadUserConversationMember\",\r\n    \"roles\": [\"owner\"],\r\n    \"user@odata.bind\": \"https://graph.microsoft.com/v1.0/users/a82083e7-cc7c-48a4-9ed1-ce70e42f7453\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/members",
											"protocol": "https",
											"host": [
												"graph",
												"microsoft",
												"com"
											],
											"path": [
												"v1.0",
												"teams",
												"{{GroupId}}",
												"members"
											]
										}
									},
									"response": []
								}
							],
							"id": "29708525-7f27ef94-4b64-4be7-b5b3-8429da775b67"
						},
						{
							"name": "Get user's joined teams",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "2e954707-f299-4398-b8d3-3827f64cb317",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-2add9b3d-64a6-4889-a124-fc84ae23b5ab",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users/{{UserId}}/joinedTeams",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users",
										"{{UserId}}",
										"joinedTeams"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get primary channel",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "0b68a88c-8675-4957-af7b-6c32c2d1dfa0",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-40c26e25-847d-4bfb-bab0-27c66aab468d",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/primaryChannel",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{GroupId}}",
										"primaryChannel"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get team channels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "94cced2a-dea9-434e-aa88-2eb1394a2b87",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application delegated permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-4304d78c-72fe-4ccd-908c-f0d656842022",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{GroupId}}/channels",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{GroupId}}",
										"channels"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "90daef67-cc69-46fb-8387-e90bc9063e2a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-00ce8be6-3fcc-415a-a002-eb279f8a7645",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "04575585-0ef3-4e69-a783-b3b688eb4b5e",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-b7466914-d33e-46e3-9de2-b7d5344ab7cf",
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {},
								"disableBodyPruning": true
							},
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"groups",
										"{{GroupId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create team from group",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "21c5a082-7b8d-48c6-9232-5ab12197ea0a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-f88e2692-1af8-458d-94fb-d096a972a808",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n  \"memberSettings\": {\r\n    \"allowCreatePrivateChannels\": true,\r\n    \"allowCreateUpdateChannels\": true\r\n  },\r\n  \"messagingSettings\": {\r\n    \"allowUserEditMessages\": true,\r\n    \"allowUserDeleteMessages\": true\r\n  },\r\n  \"funSettings\": {\r\n    \"allowGiphy\": true,\r\n    \"giphyContentRating\": \"strict\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/groups/{{GroupId}}/team",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"groups",
										"{{GroupId}}",
										"team"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "6fc9dcd1-cc37-43ba-87b7-25a35b5ed851",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-bdc4a179-3cc1-44e4-b7d1-05d8dea87c65",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n  \"memberSettings\": {\r\n    \"allowCreateUpdateChannels\": true\r\n  },\r\n  \"messagingSettings\": {\r\n    \"allowUserEditMessages\": true,\r\n    \"allowUserDeleteMessages\": true\r\n  },\r\n  \"funSettings\": {\r\n    \"allowGiphy\": true,\r\n    \"giphyContentRating\": \"strict\"\r\n  }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "d5ddbd99-4a5c-4fda-80e8-ee0ae8cdc7cb",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-7640b54e-d985-4679-91d3-1d729273b754",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"template@odata.bind\": \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\r\n  \"displayName\": \"My Sample Team\",\r\n  \"description\": \"My Sample Team’s Description\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/channels/{{ChannelId}}/members",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"channels",
										"{{ChannelId}}",
										"members"
									]
								}
							},
							"response": []
						},
						{
							"name": "Archive team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a24722f6-e255-4600-8830-c35c451b2443",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-9613ae66-bb47-498a-bcfa-830a7b4a09b6",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"shouldSetSpoSiteReadOnlyForMembers\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/archive",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"archive"
									]
								}
							},
							"response": []
						},
						{
							"name": "Clone team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "57826552-07b5-4597-96f3-1d62db0ec5b9",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-d9c7862e-0cd9-4ca3-b9aa-23ede982b269",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{  \r\n     \"displayName\": \"Library Assist\",\r\n     \"description\": \"Self help community for library\",\r\n     \"mailNickname\": \"libassist\",\r\n     \"partsToClone\": \"apps,tabs,settings,channels,members\",\r\n     \"visibility\": \"public\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/clone",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"clone"
									]
								}
							},
							"response": []
						},
						{
							"name": "Unarchive team",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "45c5f329-5239-4259-90eb-97eca7b1fd31",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *Group.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"TeamId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-6072ee1f-7efc-4ed1-ae32-468589682eee",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/teams/{{TeamId}}/unarchive",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"teams",
										"{{TeamId}}",
										"unarchive"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-07e35a6e-c312-484d-bb35-aa7c2e37e62a"
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Get users",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "471da369-de0f-481a-8b30-42993b6c896b",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *User.Read.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get a user with a mailbox\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "e0940d3f-b6e0-4dd8-aee3-4c47afd5503b",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-c61e73fb-349e-4b7a-9aea-69a21ef8aba2",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/users",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"users"
									]
								}
							},
							"response": []
						},
						{
							"name": "Invite guest user",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "a1a5ef98-f245-4e86-91d6-b8ceb375857a",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *User.Invite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            // Get invited user id\r",
											"            postman.setEnvironmentVariable(\"UserId\", json.invitedUser.id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"id": "5ae86cde-5fc3-479e-9405-d8fca5d26eb0",
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-7862ad65-d3c7-4158-8415-ea69c0ed38dc",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \r\n    \"invitedUserDisplayName\": \"<Display Name of Invited User>\", \r\n    \"invitedUserEmailAddress\": \"<Email Address of Invited User>, \r\n    \"invitedUserMessageInfo\": {\r\n        \"messageLanguage\": \"en-US\",\r\n        \"ccRecipients\": [\r\n             {\r\n                \"emailAddress\": {\r\n                    \"name\": \"<Optional CC for Invitation>\",\r\n                    \"address\": \"<Optional CC Email Address for Invitation>\"\r\n                 }\r\n             }\r\n        ],\r\n        \"customizedMessageBody\": \"Hi, you have just been invited to Azure AD with Postman using Microsoft Graph!\"\r\n     },\r\n    \"sendInvitationMessage\": true, \r\n    \"inviteRedirectUrl\": \"https://myapps.microsoft.com\" \r\n} ",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://graph.microsoft.com/v1.0/invitations",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"v1.0",
										"invitations"
									]
								},
								"description": "Invite Azure AD B2B Guest User using Application Permission"
							},
							"response": []
						}
					],
					"id": "29708525-893b484b-8800-4ccd-a7b3-49d8780e540e"
				},
				{
					"name": "Security",
					"item": [
						{
							"name": "List retention labels",
							"event": [
								{
									"listen": "test",
									"script": {
										"id": "8dd57c23-3e05-471b-be54-c71242155d25",
										"exec": [
											"try {\r",
											"    if (responseBody.indexOf(\"InvalidAuthenticationToken\") !== -1)\r",
											"    {\r",
											"        console.log(\"Go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button.\");\r",
											"    }\r",
											"    else\r",
											"    {\r",
											"        if (pm.response.status === \"Forbidden\")\r",
											"        {\r",
											"            console.log(\"You need to add application permissions in your application to at least *SecurityActions.Read.All, SecurityActions.ReadWrite.All* in portal.azure.com and then consent as user or Grant admin consent in portal. Then, go to the Application folder > Authorization tab > scroll down and click on Get New Access Token button. \");\r",
											"        }\r",
											"        else\r",
											"        {\r",
											"            var json = JSON.parse(responseBody);\r",
											"            postman.setEnvironmentVariable(\"SecurityActionsId\", json.value[0].id);\r",
											"        }\r",
											"    }\r",
											"}\r",
											"catch (e) {\r",
											"    console.log(e);\r",
											"}\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"id": "29708525-bafc8228-d4b1-48d7-883c-8846d84bc4be",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://graph.microsoft.com/beta/security/labels/retentionLabels",
									"protocol": "https",
									"host": [
										"graph",
										"microsoft",
										"com"
									],
									"path": [
										"beta",
										"security",
										"labels",
										"retentionLabels"
									]
								}
							},
							"response": []
						}
					],
					"id": "29708525-3cd3c0b0-eb30-4eda-bf42-62a83a5536e4"
				}
			],
			"id": "29708525-56fa02c0-2716-4446-82dc-d47989fffc91",
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "tokenType",
						"value": "",
						"type": "string"
					},
					{
						"key": "accessToken",
						"value": "",
						"type": "string"
					},
					{
						"key": "useBrowser",
						"value": true,
						"type": "boolean"
					},
					{
						"key": "tokenName",
						"value": "Application Token",
						"type": "string"
					},
					{
						"key": "challengeAlgorithm",
						"value": "S256",
						"type": "string"
					},
					{
						"key": "scope",
						"value": "https://graph.microsoft.com/.default",
						"type": "string"
					},
					{
						"key": "redirect_uri",
						"value": "https://app.getpostman.com/oauth2/callback",
						"type": "string"
					},
					{
						"key": "grant_type",
						"value": "client_credentials",
						"type": "string"
					},
					{
						"key": "clientSecret",
						"value": "{{ClientSecret}}",
						"type": "string"
					},
					{
						"key": "clientId",
						"value": "{{ClientID}}",
						"type": "string"
					},
					{
						"key": "authUrl",
						"value": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/authorize",
						"type": "string"
					},
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					},
					{
						"key": "client_authentication",
						"value": "header",
						"type": "string"
					},
					{
						"key": "accessTokenUrl",
						"value": "https://login.microsoftonline.com/{{TenantID}}/oauth2/v2.0/token",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "781e0a1e-3915-4db8-8fbf-611964afb12e",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "a4384104-cb29-4095-a8c3-f1840bf50977",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Misc",
			"item": [
				{
					"name": "Subscription validation",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "fdef60df-8b6e-402f-b2ca-ce0eba99c3e3",
								"exec": [
									"function decodeQueryParam(p) {\r",
									"    return decodeURIComponent(p.replace(/\\+/g, \" \"));\r",
									"}\r",
									"\r",
									"pm.test(\"Status test\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Content type test\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"text/plain\");\r",
									"});\r",
									"pm.test(\"Response body test\", function () {\r",
									"    pm.response.to.have.body(decodeQueryParam(pm.request.url.query.get(\"validationToken\")));\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"id": "29708525-8175893c-a6c9-4312-b8c0-f7dd03649ebe",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/notification?validationToken=something",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"notification"
							],
							"query": [
								{
									"key": "validationToken",
									"value": "something",
									"description": "random validation token passed by the Microsoft Graph when validating the notificationURL"
								}
							]
						},
						"description": "Allows you to validate whether the notification endpoint you are building properly passed Microsoft Graph Subscription creation validation.\nThe response content type should be text/plain, code 200 OK and the body the information passed by the validationToken query parameter"
					},
					"response": []
				}
			],
			"id": "29708525-f70c4db6-610b-4558-a5fb-e45a6583c9d2"
		},
		{
			"name": "v1.0 $metadata",
			"id": "29708525-897cf74b-0c39-4c16-b986-9f4959fe858f",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;odata.metadata=full"
					}
				],
				"url": {
					"raw": "https://graph.microsoft.com/v1.0/$metadata",
					"protocol": "https",
					"host": [
						"graph",
						"microsoft",
						"com"
					],
					"path": [
						"v1.0",
						"$metadata"
					]
				}
			},
			"response": []
		},
		{
			"name": "beta $metadata",
			"id": "29708525-e0877128-cb84-42c8-9003-a6c546d41c21",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json;odata.metadata=full"
					}
				],
				"url": {
					"raw": "https://graph.microsoft.com/beta/$metadata",
					"protocol": "https",
					"host": [
						"graph",
						"microsoft",
						"com"
					],
					"path": [
						"beta",
						"$metadata"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "bf37371d-a4e2-453f-b335-2af2e6cab275",
				"type": "text/javascript",
				"exec": [
					"if(!pm.request.headers.find(\"SdkVersion\")) {",
					"    pm.request.headers.add({key: \"SdkVersion\", value: \"postman-graph/v2.0\"});",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "6dee4194-17a3-492d-8333-98c1e2c953ff",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"id": "c27fd0f5-45f4-492c-b31f-c87765e4ac3a",
			"key": "TenantID",
			"value": ""
		},
		{
			"id": "bd321252-93e3-4af1-9c36-4e29a6126925",
			"key": "ClientID",
			"value": ""
		},
		{
			"id": "c02fd6e2-64c0-4ab0-bd15-76419d0de2b3",
			"key": "ClientSecret",
			"value": ""
		}
	]
}